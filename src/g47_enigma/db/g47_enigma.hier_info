|g47_fsm_testbed
clock => g47_pulse_generator:PULSE.clock
clock => g47_0_25_counter:ROTOR_l.clock
clock => g47_0_25_counter:ROTOR_m.clock
clock => g47_0_25_counter:ROTOR_r.clock
clock => g47_fsm:FSM.clock
reset => g47_0_25_counter:ROTOR_l.reset
reset => g47_0_25_counter:ROTOR_m.reset
reset => g47_0_25_counter:ROTOR_r.reset
init => g47_fsm:FSM.init
segments_l[0] <= g47_7_segmentdecoder:DISPLAY_l.segments[0]
segments_l[1] <= g47_7_segmentdecoder:DISPLAY_l.segments[1]
segments_l[2] <= g47_7_segmentdecoder:DISPLAY_l.segments[2]
segments_l[3] <= g47_7_segmentdecoder:DISPLAY_l.segments[3]
segments_l[4] <= g47_7_segmentdecoder:DISPLAY_l.segments[4]
segments_l[5] <= g47_7_segmentdecoder:DISPLAY_l.segments[5]
segments_l[6] <= g47_7_segmentdecoder:DISPLAY_l.segments[6]
segments_m[0] <= g47_7_segmentdecoder:DISPLAY_m.segments[0]
segments_m[1] <= g47_7_segmentdecoder:DISPLAY_m.segments[1]
segments_m[2] <= g47_7_segmentdecoder:DISPLAY_m.segments[2]
segments_m[3] <= g47_7_segmentdecoder:DISPLAY_m.segments[3]
segments_m[4] <= g47_7_segmentdecoder:DISPLAY_m.segments[4]
segments_m[5] <= g47_7_segmentdecoder:DISPLAY_m.segments[5]
segments_m[6] <= g47_7_segmentdecoder:DISPLAY_m.segments[6]
segments_r[0] <= g47_7_segmentdecoder:DISPLAY_r.segments[0]
segments_r[1] <= g47_7_segmentdecoder:DISPLAY_r.segments[1]
segments_r[2] <= g47_7_segmentdecoder:DISPLAY_r.segments[2]
segments_r[3] <= g47_7_segmentdecoder:DISPLAY_r.segments[3]
segments_r[4] <= g47_7_segmentdecoder:DISPLAY_r.segments[4]
segments_r[5] <= g47_7_segmentdecoder:DISPLAY_r.segments[5]
segments_r[6] <= g47_7_segmentdecoder:DISPLAY_r.segments[6]


|g47_fsm_testbed|g47_pulse_generator:PULSE
clock => LPM_COUNTER:COUNTER.CLOCK
epulse <= Equal0.DB_MAX_OUTPUT_PORT_TYPE


|g47_fsm_testbed|g47_pulse_generator:PULSE|LPM_COUNTER:COUNTER
clock => cntr_u5k:auto_generated.clock
clk_en => ~NO_FANOUT~
cnt_en => ~NO_FANOUT~
updown => ~NO_FANOUT~
aclr => ~NO_FANOUT~
aset => ~NO_FANOUT~
aconst => ~NO_FANOUT~
aload => ~NO_FANOUT~
sclr => ~NO_FANOUT~
sset => ~NO_FANOUT~
sconst => ~NO_FANOUT~
sload => ~NO_FANOUT~
data[0] => ~NO_FANOUT~
data[1] => ~NO_FANOUT~
data[2] => ~NO_FANOUT~
data[3] => ~NO_FANOUT~
data[4] => ~NO_FANOUT~
data[5] => ~NO_FANOUT~
data[6] => ~NO_FANOUT~
data[7] => ~NO_FANOUT~
data[8] => ~NO_FANOUT~
data[9] => ~NO_FANOUT~
data[10] => ~NO_FANOUT~
data[11] => ~NO_FANOUT~
data[12] => ~NO_FANOUT~
data[13] => ~NO_FANOUT~
data[14] => ~NO_FANOUT~
data[15] => ~NO_FANOUT~
data[16] => ~NO_FANOUT~
data[17] => ~NO_FANOUT~
data[18] => ~NO_FANOUT~
data[19] => ~NO_FANOUT~
data[20] => ~NO_FANOUT~
data[21] => ~NO_FANOUT~
data[22] => ~NO_FANOUT~
data[23] => ~NO_FANOUT~
data[24] => ~NO_FANOUT~
cin => ~NO_FANOUT~
q[0] <= cntr_u5k:auto_generated.q[0]
q[1] <= cntr_u5k:auto_generated.q[1]
q[2] <= cntr_u5k:auto_generated.q[2]
q[3] <= cntr_u5k:auto_generated.q[3]
q[4] <= cntr_u5k:auto_generated.q[4]
q[5] <= cntr_u5k:auto_generated.q[5]
q[6] <= cntr_u5k:auto_generated.q[6]
q[7] <= cntr_u5k:auto_generated.q[7]
q[8] <= cntr_u5k:auto_generated.q[8]
q[9] <= cntr_u5k:auto_generated.q[9]
q[10] <= cntr_u5k:auto_generated.q[10]
q[11] <= cntr_u5k:auto_generated.q[11]
q[12] <= cntr_u5k:auto_generated.q[12]
q[13] <= cntr_u5k:auto_generated.q[13]
q[14] <= cntr_u5k:auto_generated.q[14]
q[15] <= cntr_u5k:auto_generated.q[15]
q[16] <= cntr_u5k:auto_generated.q[16]
q[17] <= cntr_u5k:auto_generated.q[17]
q[18] <= cntr_u5k:auto_generated.q[18]
q[19] <= cntr_u5k:auto_generated.q[19]
q[20] <= cntr_u5k:auto_generated.q[20]
q[21] <= cntr_u5k:auto_generated.q[21]
q[22] <= cntr_u5k:auto_generated.q[22]
q[23] <= cntr_u5k:auto_generated.q[23]
q[24] <= cntr_u5k:auto_generated.q[24]
cout <= <GND>
eq[0] <= <GND>
eq[1] <= <GND>
eq[2] <= <GND>
eq[3] <= <GND>
eq[4] <= <GND>
eq[5] <= <GND>
eq[6] <= <GND>
eq[7] <= <GND>
eq[8] <= <GND>
eq[9] <= <GND>
eq[10] <= <GND>
eq[11] <= <GND>
eq[12] <= <GND>
eq[13] <= <GND>
eq[14] <= <GND>
eq[15] <= <GND>


|g47_fsm_testbed|g47_pulse_generator:PULSE|LPM_COUNTER:COUNTER|cntr_u5k:auto_generated
clock => counter_reg_bit1a[24].CLK
clock => counter_reg_bit1a[23].CLK
clock => counter_reg_bit1a[22].CLK
clock => counter_reg_bit1a[21].CLK
clock => counter_reg_bit1a[20].CLK
clock => counter_reg_bit1a[19].CLK
clock => counter_reg_bit1a[18].CLK
clock => counter_reg_bit1a[17].CLK
clock => counter_reg_bit1a[16].CLK
clock => counter_reg_bit1a[15].CLK
clock => counter_reg_bit1a[14].CLK
clock => counter_reg_bit1a[13].CLK
clock => counter_reg_bit1a[12].CLK
clock => counter_reg_bit1a[11].CLK
clock => counter_reg_bit1a[10].CLK
clock => counter_reg_bit1a[9].CLK
clock => counter_reg_bit1a[8].CLK
clock => counter_reg_bit1a[7].CLK
clock => counter_reg_bit1a[6].CLK
clock => counter_reg_bit1a[5].CLK
clock => counter_reg_bit1a[4].CLK
clock => counter_reg_bit1a[3].CLK
clock => counter_reg_bit1a[2].CLK
clock => counter_reg_bit1a[1].CLK
clock => counter_reg_bit1a[0].CLK
q[0] <= counter_reg_bit1a[0].REGOUT
q[1] <= counter_reg_bit1a[1].REGOUT
q[2] <= counter_reg_bit1a[2].REGOUT
q[3] <= counter_reg_bit1a[3].REGOUT
q[4] <= counter_reg_bit1a[4].REGOUT
q[5] <= counter_reg_bit1a[5].REGOUT
q[6] <= counter_reg_bit1a[6].REGOUT
q[7] <= counter_reg_bit1a[7].REGOUT
q[8] <= counter_reg_bit1a[8].REGOUT
q[9] <= counter_reg_bit1a[9].REGOUT
q[10] <= counter_reg_bit1a[10].REGOUT
q[11] <= counter_reg_bit1a[11].REGOUT
q[12] <= counter_reg_bit1a[12].REGOUT
q[13] <= counter_reg_bit1a[13].REGOUT
q[14] <= counter_reg_bit1a[14].REGOUT
q[15] <= counter_reg_bit1a[15].REGOUT
q[16] <= counter_reg_bit1a[16].REGOUT
q[17] <= counter_reg_bit1a[17].REGOUT
q[18] <= counter_reg_bit1a[18].REGOUT
q[19] <= counter_reg_bit1a[19].REGOUT
q[20] <= counter_reg_bit1a[20].REGOUT
q[21] <= counter_reg_bit1a[21].REGOUT
q[22] <= counter_reg_bit1a[22].REGOUT
q[23] <= counter_reg_bit1a[23].REGOUT
q[24] <= counter_reg_bit1a[24].REGOUT


|g47_fsm_testbed|g47_0_25_counter:ROTOR_l
clock => count_previous[0].CLK
clock => count_previous[1].CLK
clock => count_previous[2].CLK
clock => count_previous[3].CLK
clock => count_previous[4].CLK
reset => count_previous[0].ACLR
reset => count_previous[1].ACLR
reset => count_previous[2].ACLR
reset => count_previous[3].ACLR
reset => count_previous[4].ACLR
count_enable => count_previous.OUTPUTSELECT
count_enable => count_previous.OUTPUTSELECT
count_enable => count_previous.OUTPUTSELECT
count_enable => count_previous.OUTPUTSELECT
count_enable => count_previous.OUTPUTSELECT
count[0] <= count_previous[0].DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count_previous[1].DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count_previous[2].DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count_previous[3].DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count_previous[4].DB_MAX_OUTPUT_PORT_TYPE
load => count_previous.OUTPUTSELECT
load => count_previous.OUTPUTSELECT
load => count_previous.OUTPUTSELECT
load => count_previous.OUTPUTSELECT
load => count_previous.OUTPUTSELECT
load_value[0] => count_previous.DATAB
load_value[1] => count_previous.DATAB
load_value[2] => count_previous.DATAB
load_value[3] => count_previous.DATAB
load_value[4] => count_previous.DATAB


|g47_fsm_testbed|g47_0_25_counter:ROTOR_m
clock => count_previous[0].CLK
clock => count_previous[1].CLK
clock => count_previous[2].CLK
clock => count_previous[3].CLK
clock => count_previous[4].CLK
reset => count_previous[0].ACLR
reset => count_previous[1].ACLR
reset => count_previous[2].ACLR
reset => count_previous[3].ACLR
reset => count_previous[4].ACLR
count_enable => count_previous.OUTPUTSELECT
count_enable => count_previous.OUTPUTSELECT
count_enable => count_previous.OUTPUTSELECT
count_enable => count_previous.OUTPUTSELECT
count_enable => count_previous.OUTPUTSELECT
count[0] <= count_previous[0].DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count_previous[1].DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count_previous[2].DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count_previous[3].DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count_previous[4].DB_MAX_OUTPUT_PORT_TYPE
load => count_previous.OUTPUTSELECT
load => count_previous.OUTPUTSELECT
load => count_previous.OUTPUTSELECT
load => count_previous.OUTPUTSELECT
load => count_previous.OUTPUTSELECT
load_value[0] => count_previous.DATAB
load_value[1] => count_previous.DATAB
load_value[2] => count_previous.DATAB
load_value[3] => count_previous.DATAB
load_value[4] => count_previous.DATAB


|g47_fsm_testbed|g47_0_25_counter:ROTOR_r
clock => count_previous[0].CLK
clock => count_previous[1].CLK
clock => count_previous[2].CLK
clock => count_previous[3].CLK
clock => count_previous[4].CLK
reset => count_previous[0].ACLR
reset => count_previous[1].ACLR
reset => count_previous[2].ACLR
reset => count_previous[3].ACLR
reset => count_previous[4].ACLR
count_enable => count_previous.OUTPUTSELECT
count_enable => count_previous.OUTPUTSELECT
count_enable => count_previous.OUTPUTSELECT
count_enable => count_previous.OUTPUTSELECT
count_enable => count_previous.OUTPUTSELECT
count[0] <= count_previous[0].DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count_previous[1].DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count_previous[2].DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count_previous[3].DB_MAX_OUTPUT_PORT_TYPE
count[4] <= count_previous[4].DB_MAX_OUTPUT_PORT_TYPE
load => count_previous.OUTPUTSELECT
load => count_previous.OUTPUTSELECT
load => count_previous.OUTPUTSELECT
load => count_previous.OUTPUTSELECT
load => count_previous.OUTPUTSELECT
load_value[0] => count_previous.DATAB
load_value[1] => count_previous.DATAB
load_value[2] => count_previous.DATAB
load_value[3] => count_previous.DATAB
load_value[4] => count_previous.DATAB


|g47_fsm_testbed|g47_5_comp:COMP_m
A[0] => Equal0.IN4
A[1] => Equal0.IN3
A[2] => Equal0.IN2
A[3] => Equal0.IN1
A[4] => Equal0.IN0
B[0] => Equal0.IN9
B[1] => Equal0.IN8
B[2] => Equal0.IN7
B[3] => Equal0.IN6
B[4] => Equal0.IN5
Eq <= Equal0.DB_MAX_OUTPUT_PORT_TYPE


|g47_fsm_testbed|g47_5_comp:COMP_r
A[0] => Equal0.IN4
A[1] => Equal0.IN3
A[2] => Equal0.IN2
A[3] => Equal0.IN1
A[4] => Equal0.IN0
B[0] => Equal0.IN9
B[1] => Equal0.IN8
B[2] => Equal0.IN7
B[3] => Equal0.IN6
B[4] => Equal0.IN5
Eq <= Equal0.DB_MAX_OUTPUT_PORT_TYPE


|g47_fsm_testbed|g47_fsm:FSM
clock => ~NO_FANOUT~
keypress => state[1].IN1
keypress => state[1].DATAB
knock_m => en_m.OUTPUTSELECT
knock_m => en_l.DATAB
knock_r => en_m.DATAA
init => en_l.OUTPUTSELECT
init => en_m.OUTPUTSELECT
init => en_r.OUTPUTSELECT
init => state[0].ACLR
init => state[1].ACLR
init => load.DATAIN
en_l <= en_l.DB_MAX_OUTPUT_PORT_TYPE
en_m <= en_m.DB_MAX_OUTPUT_PORT_TYPE
en_r <= en_r.DB_MAX_OUTPUT_PORT_TYPE
load <= init.DB_MAX_OUTPUT_PORT_TYPE


|g47_fsm_testbed|g47_7_segmentdecoder:DISPLAY_l
index[0] => Mux0.IN36
index[0] => Mux1.IN36
index[0] => Mux2.IN36
index[0] => Mux3.IN36
index[0] => Mux4.IN36
index[0] => Mux5.IN36
index[0] => Mux6.IN36
index[1] => Mux0.IN35
index[1] => Mux1.IN35
index[1] => Mux2.IN35
index[1] => Mux3.IN35
index[1] => Mux4.IN35
index[1] => Mux5.IN35
index[1] => Mux6.IN35
index[2] => Mux0.IN34
index[2] => Mux1.IN34
index[2] => Mux2.IN34
index[2] => Mux3.IN34
index[2] => Mux4.IN34
index[2] => Mux5.IN34
index[2] => Mux6.IN34
index[3] => Mux0.IN33
index[3] => Mux1.IN33
index[3] => Mux2.IN33
index[3] => Mux3.IN33
index[3] => Mux4.IN33
index[3] => Mux5.IN33
index[3] => Mux6.IN33
index[4] => Mux0.IN32
index[4] => Mux1.IN32
index[4] => Mux2.IN32
index[4] => Mux3.IN32
index[4] => Mux4.IN32
index[4] => Mux5.IN32
index[4] => Mux6.IN32
segments[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
segments[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
segments[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
segments[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
segments[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
segments[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
segments[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|g47_fsm_testbed|g47_7_segmentdecoder:DISPLAY_m
index[0] => Mux0.IN36
index[0] => Mux1.IN36
index[0] => Mux2.IN36
index[0] => Mux3.IN36
index[0] => Mux4.IN36
index[0] => Mux5.IN36
index[0] => Mux6.IN36
index[1] => Mux0.IN35
index[1] => Mux1.IN35
index[1] => Mux2.IN35
index[1] => Mux3.IN35
index[1] => Mux4.IN35
index[1] => Mux5.IN35
index[1] => Mux6.IN35
index[2] => Mux0.IN34
index[2] => Mux1.IN34
index[2] => Mux2.IN34
index[2] => Mux3.IN34
index[2] => Mux4.IN34
index[2] => Mux5.IN34
index[2] => Mux6.IN34
index[3] => Mux0.IN33
index[3] => Mux1.IN33
index[3] => Mux2.IN33
index[3] => Mux3.IN33
index[3] => Mux4.IN33
index[3] => Mux5.IN33
index[3] => Mux6.IN33
index[4] => Mux0.IN32
index[4] => Mux1.IN32
index[4] => Mux2.IN32
index[4] => Mux3.IN32
index[4] => Mux4.IN32
index[4] => Mux5.IN32
index[4] => Mux6.IN32
segments[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
segments[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
segments[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
segments[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
segments[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
segments[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
segments[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|g47_fsm_testbed|g47_7_segmentdecoder:DISPLAY_r
index[0] => Mux0.IN36
index[0] => Mux1.IN36
index[0] => Mux2.IN36
index[0] => Mux3.IN36
index[0] => Mux4.IN36
index[0] => Mux5.IN36
index[0] => Mux6.IN36
index[1] => Mux0.IN35
index[1] => Mux1.IN35
index[1] => Mux2.IN35
index[1] => Mux3.IN35
index[1] => Mux4.IN35
index[1] => Mux5.IN35
index[1] => Mux6.IN35
index[2] => Mux0.IN34
index[2] => Mux1.IN34
index[2] => Mux2.IN34
index[2] => Mux3.IN34
index[2] => Mux4.IN34
index[2] => Mux5.IN34
index[2] => Mux6.IN34
index[3] => Mux0.IN33
index[3] => Mux1.IN33
index[3] => Mux2.IN33
index[3] => Mux3.IN33
index[3] => Mux4.IN33
index[3] => Mux5.IN33
index[3] => Mux6.IN33
index[4] => Mux0.IN32
index[4] => Mux1.IN32
index[4] => Mux2.IN32
index[4] => Mux3.IN32
index[4] => Mux4.IN32
index[4] => Mux5.IN32
index[4] => Mux6.IN32
segments[0] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
segments[1] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
segments[2] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
segments[3] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
segments[4] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
segments[5] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
segments[6] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


