TimeQuest Timing Analyzer report for g47_ui
Fri Apr 08 19:24:14 2016
Quartus II 64-Bit Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition


---------------------
; Table of Contents ;
---------------------
  1. Legal Notice
  2. TimeQuest Timing Analyzer Summary
  3. Parallel Compilation
  4. Clocks
  5. Slow Model Fmax Summary
  6. Slow Model Setup Summary
  7. Slow Model Hold Summary
  8. Slow Model Recovery Summary
  9. Slow Model Removal Summary
 10. Slow Model Minimum Pulse Width Summary
 11. Slow Model Setup: 'clock'
 12. Slow Model Hold: 'clock'
 13. Slow Model Minimum Pulse Width: 'clock'
 14. Setup Times
 15. Hold Times
 16. Clock to Output Times
 17. Minimum Clock to Output Times
 18. Fast Model Setup Summary
 19. Fast Model Hold Summary
 20. Fast Model Recovery Summary
 21. Fast Model Removal Summary
 22. Fast Model Minimum Pulse Width Summary
 23. Fast Model Setup: 'clock'
 24. Fast Model Hold: 'clock'
 25. Fast Model Minimum Pulse Width: 'clock'
 26. Setup Times
 27. Hold Times
 28. Clock to Output Times
 29. Minimum Clock to Output Times
 30. Multicorner Timing Analysis Summary
 31. Setup Times
 32. Hold Times
 33. Clock to Output Times
 34. Minimum Clock to Output Times
 35. Setup Transfers
 36. Hold Transfers
 37. Report TCCS
 38. Report RSKM
 39. Unconstrained Paths
 40. TimeQuest Timing Analyzer Messages



----------------
; Legal Notice ;
----------------
Copyright (C) 1991-2013 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.



+----------------------------------------------------------------------------------------+
; TimeQuest Timing Analyzer Summary                                                      ;
+--------------------+-------------------------------------------------------------------+
; Quartus II Version ; Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition ;
; Revision Name      ; g47_ui                                                            ;
; Device Family      ; Cyclone II                                                        ;
; Device Name        ; EP2C20F484C7                                                      ;
; Timing Models      ; Final                                                             ;
; Delay Model        ; Combined                                                          ;
; Rise/Fall Delays   ; Unavailable                                                       ;
+--------------------+-------------------------------------------------------------------+


+------------------------------------------+
; Parallel Compilation                     ;
+----------------------------+-------------+
; Processors                 ; Number      ;
+----------------------------+-------------+
; Number detected on machine ; 2           ;
; Maximum allowed            ; 2           ;
;                            ;             ;
; Average used               ; 1.00        ;
; Maximum used               ; 1           ;
;                            ;             ;
; Usage by Processor         ; % Time Used ;
;     Processor 1            ; 100.0%      ;
;     Processor 2            ;   0.0%      ;
+----------------------------+-------------+


+-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Clocks                                                                                                                                                                            ;
+------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+-----------+
; Clock Name ; Type ; Period ; Frequency  ; Rise  ; Fall  ; Duty Cycle ; Divide by ; Multiply by ; Phase ; Offset ; Edge List ; Edge Shift ; Inverted ; Master ; Source ; Targets   ;
+------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+-----------+
; clock      ; Base ; 1.000  ; 1000.0 MHz ; 0.000 ; 0.500 ;            ;           ;             ;       ;        ;           ;            ;          ;        ;        ; { clock } ;
+------------+------+--------+------------+-------+-------+------------+-----------+-------------+-------+--------+-----------+------------+----------+--------+--------+-----------+


+--------------------------------------------------+
; Slow Model Fmax Summary                          ;
+------------+-----------------+------------+------+
; Fmax       ; Restricted Fmax ; Clock Name ; Note ;
+------------+-----------------+------------+------+
; 238.04 MHz ; 238.04 MHz      ; clock      ;      ;
+------------+-----------------+------------+------+
This panel reports FMAX for every clock in the design, regardless of the user-specified clock periods.  FMAX is only computed for paths where the source and destination registers or ports are driven by the same clock.  Paths of different clocks, including generated clocks, are ignored.  For paths between a clock and its inversion, FMAX is computed as if the rising and falling edges are scaled along with FMAX, such that the duty cycle (in terms of a percentage) is maintained. Altera recommends that you always use clock constraints and other slack reports for sign-off analysis.


+--------------------------------+
; Slow Model Setup Summary       ;
+-------+--------+---------------+
; Clock ; Slack  ; End Point TNS ;
+-------+--------+---------------+
; clock ; -3.201 ; -108.804      ;
+-------+--------+---------------+


+-------------------------------+
; Slow Model Hold Summary       ;
+-------+-------+---------------+
; Clock ; Slack ; End Point TNS ;
+-------+-------+---------------+
; clock ; 0.445 ; 0.000         ;
+-------+-------+---------------+


-------------------------------
; Slow Model Recovery Summary ;
-------------------------------
No paths to report.


------------------------------
; Slow Model Removal Summary ;
------------------------------
No paths to report.


+----------------------------------------+
; Slow Model Minimum Pulse Width Summary ;
+-------+--------+-----------------------+
; Clock ; Slack  ; End Point TNS         ;
+-------+--------+-----------------------+
; clock ; -1.631 ; -82.283               ;
+-------+--------+-----------------------+


+---------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Setup: 'clock'                                                                                                             ;
+--------+----------------------+---------------------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node            ; To Node                         ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+----------------------+---------------------------------+--------------+-------------+--------------+------------+------------+
; -3.201 ; left_ring_shift[2]   ; input_2[1]                      ; clock        ; clock       ; 1.000        ; -0.001     ; 4.238      ;
; -3.175 ; left_ring_shift[1]   ; input_2[1]                      ; clock        ; clock       ; 1.000        ; -0.001     ; 4.212      ;
; -3.148 ; middle_ring_shift[4] ; input_2[1]                      ; clock        ; clock       ; 1.000        ; 0.001      ; 4.187      ;
; -3.129 ; middle_ring_shift[3] ; input_2[1]                      ; clock        ; clock       ; 1.000        ; 0.001      ; 4.168      ;
; -2.998 ; middle_ring_shift[2] ; input_2[1]                      ; clock        ; clock       ; 1.000        ; 0.001      ; 4.037      ;
; -2.984 ; left_ring_shift[4]   ; input_2[1]                      ; clock        ; clock       ; 1.000        ; -0.001     ; 4.021      ;
; -2.947 ; middle_ring_shift[4] ; input_3[0]                      ; clock        ; clock       ; 1.000        ; -0.001     ; 3.984      ;
; -2.947 ; middle_ring_shift[4] ; input_3[1]                      ; clock        ; clock       ; 1.000        ; -0.001     ; 3.984      ;
; -2.928 ; middle_ring_shift[3] ; input_3[0]                      ; clock        ; clock       ; 1.000        ; -0.001     ; 3.965      ;
; -2.928 ; middle_ring_shift[3] ; input_3[1]                      ; clock        ; clock       ; 1.000        ; -0.001     ; 3.965      ;
; -2.900 ; right_ring_shift[1]  ; input_2[1]                      ; clock        ; clock       ; 1.000        ; 0.000      ; 3.938      ;
; -2.884 ; right_ring_shift[4]  ; input_2[1]                      ; clock        ; clock       ; 1.000        ; 0.000      ; 3.922      ;
; -2.832 ; left_ring_shift[3]   ; input_2[1]                      ; clock        ; clock       ; 1.000        ; -0.001     ; 3.869      ;
; -2.827 ; left_ring_shift[2]   ; input_3[0]                      ; clock        ; clock       ; 1.000        ; -0.003     ; 3.862      ;
; -2.827 ; left_ring_shift[2]   ; input_3[1]                      ; clock        ; clock       ; 1.000        ; -0.003     ; 3.862      ;
; -2.823 ; right_rotor_type[0]  ; input_2[1]                      ; clock        ; clock       ; 1.000        ; -0.001     ; 3.860      ;
; -2.815 ; right_data[3]        ; input_2[3]                      ; clock        ; clock       ; 1.000        ; 0.000      ; 3.853      ;
; -2.801 ; left_ring_shift[1]   ; input_3[0]                      ; clock        ; clock       ; 1.000        ; -0.003     ; 3.836      ;
; -2.801 ; left_ring_shift[1]   ; input_3[1]                      ; clock        ; clock       ; 1.000        ; -0.003     ; 3.836      ;
; -2.797 ; middle_ring_shift[2] ; input_3[0]                      ; clock        ; clock       ; 1.000        ; -0.001     ; 3.834      ;
; -2.797 ; middle_ring_shift[2] ; input_3[1]                      ; clock        ; clock       ; 1.000        ; -0.001     ; 3.834      ;
; -2.793 ; right_ring_shift[1]  ; input_3[0]                      ; clock        ; clock       ; 1.000        ; -0.002     ; 3.829      ;
; -2.793 ; right_ring_shift[1]  ; input_3[1]                      ; clock        ; clock       ; 1.000        ; -0.002     ; 3.829      ;
; -2.789 ; right_ring_shift[2]  ; input_2[1]                      ; clock        ; clock       ; 1.000        ; 0.000      ; 3.827      ;
; -2.782 ; left_ring_shift[2]   ; input_2[3]                      ; clock        ; clock       ; 1.000        ; -0.001     ; 3.819      ;
; -2.756 ; right_ring_shift[4]  ; input_3[0]                      ; clock        ; clock       ; 1.000        ; -0.002     ; 3.792      ;
; -2.756 ; right_ring_shift[4]  ; input_3[1]                      ; clock        ; clock       ; 1.000        ; -0.002     ; 3.792      ;
; -2.756 ; left_ring_shift[1]   ; input_2[3]                      ; clock        ; clock       ; 1.000        ; -0.001     ; 3.793      ;
; -2.750 ; middle_rotor_type[0] ; input_2[1]                      ; clock        ; clock       ; 1.000        ; -0.001     ; 3.787      ;
; -2.715 ; right_ring_shift[2]  ; input_2[2]                      ; clock        ; clock       ; 1.000        ; 0.000      ; 3.753      ;
; -2.671 ; right_ring_shift[3]  ; input_2[1]                      ; clock        ; clock       ; 1.000        ; 0.000      ; 3.709      ;
; -2.668 ; right_ring_shift[3]  ; input_2[3]                      ; clock        ; clock       ; 1.000        ; 0.000      ; 3.706      ;
; -2.664 ; right_ring_shift[2]  ; input_3[0]                      ; clock        ; clock       ; 1.000        ; -0.002     ; 3.700      ;
; -2.664 ; right_ring_shift[2]  ; input_3[1]                      ; clock        ; clock       ; 1.000        ; -0.002     ; 3.700      ;
; -2.646 ; keypress_state.B     ; keypress_state.C                ; clock        ; clock       ; 1.000        ; -0.001     ; 3.683      ;
; -2.645 ; right_rotor_type[1]  ; input_2[1]                      ; clock        ; clock       ; 1.000        ; -0.001     ; 3.682      ;
; -2.645 ; right_ring_shift[1]  ; input_2[3]                      ; clock        ; clock       ; 1.000        ; 0.000      ; 3.683      ;
; -2.618 ; right_ring_shift[4]  ; input_2[3]                      ; clock        ; clock       ; 1.000        ; 0.000      ; 3.656      ;
; -2.598 ; middle_ring_shift[4] ; input_2[3]                      ; clock        ; clock       ; 1.000        ; 0.001      ; 3.637      ;
; -2.583 ; middle_ring_shift[1] ; input_2[3]                      ; clock        ; clock       ; 1.000        ; 0.001      ; 3.622      ;
; -2.566 ; middle_ring_shift[1] ; input_2[1]                      ; clock        ; clock       ; 1.000        ; 0.001      ; 3.605      ;
; -2.564 ; right_ring_shift[3]  ; input_3[0]                      ; clock        ; clock       ; 1.000        ; -0.002     ; 3.600      ;
; -2.564 ; right_ring_shift[3]  ; input_3[1]                      ; clock        ; clock       ; 1.000        ; -0.002     ; 3.600      ;
; -2.549 ; left_ring_shift[4]   ; input_3[0]                      ; clock        ; clock       ; 1.000        ; -0.003     ; 3.584      ;
; -2.549 ; left_ring_shift[4]   ; input_3[1]                      ; clock        ; clock       ; 1.000        ; -0.003     ; 3.584      ;
; -2.536 ; right_ring_shift[1]  ; input_clear[3]                  ; clock        ; clock       ; 1.000        ; -0.002     ; 3.572      ;
; -2.523 ; right_rotor_type[0]  ; input_2[2]                      ; clock        ; clock       ; 1.000        ; -0.001     ; 3.560      ;
; -2.518 ; right_ring_shift[2]  ; input_2[3]                      ; clock        ; clock       ; 1.000        ; 0.000      ; 3.556      ;
; -2.504 ; left_ring_shift[4]   ; input_2[3]                      ; clock        ; clock       ; 1.000        ; -0.001     ; 3.541      ;
; -2.502 ; left_ring_shift[2]   ; input_2[2]                      ; clock        ; clock       ; 1.000        ; -0.001     ; 3.539      ;
; -2.499 ; right_ring_shift[4]  ; input_clear[3]                  ; clock        ; clock       ; 1.000        ; -0.002     ; 3.535      ;
; -2.480 ; left_ring_shift[1]   ; input_2[2]                      ; clock        ; clock       ; 1.000        ; -0.001     ; 3.517      ;
; -2.476 ; middle_data[3]       ; input_2[3]                      ; clock        ; clock       ; 1.000        ; 0.001      ; 3.515      ;
; -2.458 ; left_ring_shift[3]   ; input_3[0]                      ; clock        ; clock       ; 1.000        ; -0.003     ; 3.493      ;
; -2.458 ; left_ring_shift[3]   ; input_3[1]                      ; clock        ; clock       ; 1.000        ; -0.003     ; 3.493      ;
; -2.450 ; middle_rotor_type[0] ; input_2[2]                      ; clock        ; clock       ; 1.000        ; -0.001     ; 3.487      ;
; -2.436 ; middle_ring_shift[2] ; input_2[3]                      ; clock        ; clock       ; 1.000        ; 0.001      ; 3.475      ;
; -2.427 ; right_ring_shift[3]  ; input_2[2]                      ; clock        ; clock       ; 1.000        ; 0.000      ; 3.465      ;
; -2.413 ; left_ring_shift[3]   ; input_2[3]                      ; clock        ; clock       ; 1.000        ; -0.001     ; 3.450      ;
; -2.407 ; right_ring_shift[2]  ; input_clear[3]                  ; clock        ; clock       ; 1.000        ; -0.002     ; 3.443      ;
; -2.394 ; middle_ring_shift[3] ; input_2[3]                      ; clock        ; clock       ; 1.000        ; 0.001      ; 3.433      ;
; -2.390 ; middle_ring_shift[0] ; input_2[0]                      ; clock        ; clock       ; 1.000        ; 0.002      ; 3.430      ;
; -2.365 ; middle_ring_shift[1] ; input_3[0]                      ; clock        ; clock       ; 1.000        ; -0.001     ; 3.402      ;
; -2.365 ; middle_ring_shift[1] ; input_3[1]                      ; clock        ; clock       ; 1.000        ; -0.001     ; 3.402      ;
; -2.362 ; keypress_state.C     ; right_ring_shift[0]             ; clock        ; clock       ; 1.000        ; 0.002      ; 3.402      ;
; -2.345 ; right_rotor_type[1]  ; input_2[2]                      ; clock        ; clock       ; 1.000        ; -0.001     ; 3.382      ;
; -2.342 ; keypress_state.C     ; middle_data[2]                  ; clock        ; clock       ; 1.000        ; -0.005     ; 3.375      ;
; -2.337 ; keypress_state.C     ; g47_0_25_counter:COUNTER|cnt[0] ; clock        ; clock       ; 1.000        ; 0.001      ; 3.376      ;
; -2.337 ; keypress_state.C     ; g47_0_25_counter:COUNTER|cnt[2] ; clock        ; clock       ; 1.000        ; 0.001      ; 3.376      ;
; -2.337 ; keypress_state.C     ; g47_0_25_counter:COUNTER|cnt[3] ; clock        ; clock       ; 1.000        ; 0.001      ; 3.376      ;
; -2.337 ; keypress_state.C     ; g47_0_25_counter:COUNTER|cnt[4] ; clock        ; clock       ; 1.000        ; 0.001      ; 3.376      ;
; -2.337 ; keypress_state.C     ; g47_0_25_counter:COUNTER|cnt[1] ; clock        ; clock       ; 1.000        ; 0.001      ; 3.376      ;
; -2.326 ; input_2[1]           ; input_2[1]                      ; clock        ; clock       ; 1.000        ; 0.000      ; 3.364      ;
; -2.316 ; left_data[0]         ; input_2[0]                      ; clock        ; clock       ; 1.000        ; 0.000      ; 3.354      ;
; -2.307 ; right_ring_shift[3]  ; input_clear[3]                  ; clock        ; clock       ; 1.000        ; -0.002     ; 3.343      ;
; -2.301 ; right_ring_shift[1]  ; input_3[2]                      ; clock        ; clock       ; 1.000        ; -0.002     ; 3.337      ;
; -2.295 ; left_rotor_type[0]   ; input_2[1]                      ; clock        ; clock       ; 1.000        ; -0.001     ; 3.332      ;
; -2.279 ; left_ring_shift[4]   ; input_2[2]                      ; clock        ; clock       ; 1.000        ; -0.001     ; 3.316      ;
; -2.277 ; middle_rotor_type[1] ; input_2[1]                      ; clock        ; clock       ; 1.000        ; -0.001     ; 3.314      ;
; -2.264 ; right_ring_shift[4]  ; input_3[2]                      ; clock        ; clock       ; 1.000        ; -0.002     ; 3.300      ;
; -2.257 ; right_ring_shift[0]  ; input_2[0]                      ; clock        ; clock       ; 1.000        ; -0.002     ; 3.293      ;
; -2.215 ; middle_data[0]       ; input_2[0]                      ; clock        ; clock       ; 1.000        ; 0.002      ; 3.255      ;
; -2.172 ; right_ring_shift[2]  ; input_3[2]                      ; clock        ; clock       ; 1.000        ; -0.002     ; 3.208      ;
; -2.166 ; left_ring_shift[2]   ; input_clear[3]                  ; clock        ; clock       ; 1.000        ; -0.003     ; 3.201      ;
; -2.165 ; left_ring_shift[2]   ; input_3[2]                      ; clock        ; clock       ; 1.000        ; -0.003     ; 3.200      ;
; -2.142 ; left_ring_shift[3]   ; input_2[2]                      ; clock        ; clock       ; 1.000        ; -0.001     ; 3.179      ;
; -2.140 ; left_ring_shift[1]   ; input_clear[3]                  ; clock        ; clock       ; 1.000        ; -0.003     ; 3.175      ;
; -2.139 ; left_ring_shift[1]   ; input_3[2]                      ; clock        ; clock       ; 1.000        ; -0.003     ; 3.174      ;
; -2.109 ; keypress_state.C     ; left_data[4]                    ; clock        ; clock       ; 1.000        ; 0.002      ; 3.149      ;
; -2.089 ; right_data[0]        ; input_2[0]                      ; clock        ; clock       ; 1.000        ; -0.002     ; 3.125      ;
; -2.086 ; middle_ring_shift[4] ; input_clear[3]                  ; clock        ; clock       ; 1.000        ; -0.001     ; 3.123      ;
; -2.082 ; keypress_state.C     ; right_data[0]                   ; clock        ; clock       ; 1.000        ; 0.002      ; 3.122      ;
; -2.082 ; keypress_state.C     ; right_data[4]                   ; clock        ; clock       ; 1.000        ; 0.002      ; 3.122      ;
; -2.076 ; right_ring_shift[4]  ; input_2[2]                      ; clock        ; clock       ; 1.000        ; 0.000      ; 3.114      ;
; -2.072 ; right_ring_shift[3]  ; input_3[2]                      ; clock        ; clock       ; 1.000        ; -0.002     ; 3.108      ;
; -2.070 ; right_data[2]        ; input_2[2]                      ; clock        ; clock       ; 1.000        ; 0.003      ; 3.111      ;
; -2.067 ; middle_ring_shift[3] ; input_clear[3]                  ; clock        ; clock       ; 1.000        ; -0.001     ; 3.104      ;
; -2.058 ; keypress_state.C     ; middle_ring_shift[2]            ; clock        ; clock       ; 1.000        ; -0.002     ; 3.094      ;
; -2.058 ; keypress_state.C     ; middle_ring_shift[1]            ; clock        ; clock       ; 1.000        ; -0.002     ; 3.094      ;
; -2.058 ; keypress_state.C     ; middle_ring_shift[3]            ; clock        ; clock       ; 1.000        ; -0.002     ; 3.094      ;
+--------+----------------------+---------------------------------+--------------+-------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------------------------------------------+
; Slow Model Hold: 'clock'                                                                                                                        ;
+-------+---------------------------------+---------------------------------+--------------+-------------+--------------+------------+------------+
; Slack ; From Node                       ; To Node                         ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+-------+---------------------------------+---------------------------------+--------------+-------------+--------------+------------+------------+
; 0.445 ; g47_0_25_counter:COUNTER|cnt[1] ; g47_0_25_counter:COUNTER|cnt[1] ; clock        ; clock       ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; input_3[2]                      ; input_3[2]                      ; clock        ; clock       ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; input_2[5]                      ; input_2[5]                      ; clock        ; clock       ; 0.000        ; 0.000      ; 0.731      ;
; 0.445 ; reflector_type                  ; reflector_type                  ; clock        ; clock       ; 0.000        ; 0.000      ; 0.731      ;
; 0.985 ; g47_0_25_counter:COUNTER|cnt[2] ; g47_0_25_counter:COUNTER|cnt[2] ; clock        ; clock       ; 0.000        ; 0.000      ; 1.271      ;
; 0.989 ; g47_0_25_counter:COUNTER|cnt[0] ; g47_0_25_counter:COUNTER|cnt[0] ; clock        ; clock       ; 0.000        ; 0.000      ; 1.275      ;
; 1.016 ; g47_0_25_counter:COUNTER|cnt[1] ; g47_0_25_counter:COUNTER|cnt[4] ; clock        ; clock       ; 0.000        ; 0.000      ; 1.302      ;
; 1.017 ; g47_0_25_counter:COUNTER|cnt[1] ; g47_0_25_counter:COUNTER|cnt[3] ; clock        ; clock       ; 0.000        ; 0.000      ; 1.303      ;
; 1.092 ; input_0[0]                      ; input_0[0]                      ; clock        ; clock       ; 0.000        ; 0.000      ; 1.378      ;
; 1.105 ; g47_0_25_counter:COUNTER|cnt[4] ; g47_0_25_counter:COUNTER|cnt[4] ; clock        ; clock       ; 0.000        ; 0.000      ; 1.391      ;
; 1.411 ; g47_0_25_counter:COUNTER|cnt[1] ; g47_0_25_counter:COUNTER|cnt[2] ; clock        ; clock       ; 0.000        ; 0.000      ; 1.697      ;
; 1.412 ; right_data[4]                   ; input_2[4]                      ; clock        ; clock       ; 0.000        ; -0.003     ; 1.695      ;
; 1.441 ; g47_0_25_counter:COUNTER|cnt[4] ; g47_0_25_counter:COUNTER|cnt[3] ; clock        ; clock       ; 0.000        ; 0.000      ; 1.727      ;
; 1.443 ; g47_0_25_counter:COUNTER|cnt[4] ; g47_0_25_counter:COUNTER|cnt[1] ; clock        ; clock       ; 0.000        ; 0.000      ; 1.729      ;
; 1.460 ; keypress_state.C                ; reflector_type                  ; clock        ; clock       ; 0.000        ; 0.000      ; 1.746      ;
; 1.461 ; g47_0_25_counter:COUNTER|cnt[3] ; g47_0_25_counter:COUNTER|cnt[3] ; clock        ; clock       ; 0.000        ; 0.000      ; 1.747      ;
; 1.474 ; reflector_type                  ; input_2[0]                      ; clock        ; clock       ; 0.000        ; 0.000      ; 1.760      ;
; 1.501 ; g47_0_25_counter:COUNTER|cnt[0] ; g47_0_25_counter:COUNTER|cnt[2] ; clock        ; clock       ; 0.000        ; 0.000      ; 1.787      ;
; 1.526 ; middle_data[4]                  ; input_2[4]                      ; clock        ; clock       ; 0.000        ; 0.001      ; 1.813      ;
; 1.578 ; left_data[4]                    ; input_2[4]                      ; clock        ; clock       ; 0.000        ; -0.003     ; 1.861      ;
; 1.599 ; g47_0_25_counter:COUNTER|cnt[0] ; g47_0_25_counter:COUNTER|cnt[3] ; clock        ; clock       ; 0.000        ; 0.000      ; 1.885      ;
; 1.601 ; g47_0_25_counter:COUNTER|cnt[0] ; g47_0_25_counter:COUNTER|cnt[1] ; clock        ; clock       ; 0.000        ; 0.000      ; 1.887      ;
; 1.601 ; g47_0_25_counter:COUNTER|cnt[0] ; g47_0_25_counter:COUNTER|cnt[4] ; clock        ; clock       ; 0.000        ; 0.000      ; 1.887      ;
; 1.763 ; g47_0_25_counter:COUNTER|cnt[3] ; g47_0_25_counter:COUNTER|cnt[1] ; clock        ; clock       ; 0.000        ; 0.000      ; 2.049      ;
; 1.763 ; g47_0_25_counter:COUNTER|cnt[3] ; g47_0_25_counter:COUNTER|cnt[4] ; clock        ; clock       ; 0.000        ; 0.000      ; 2.049      ;
; 1.813 ; middle_ring_shift[4]            ; input_3[1]                      ; clock        ; clock       ; 0.000        ; -0.001     ; 2.098      ;
; 1.889 ; g47_0_25_counter:COUNTER|cnt[2] ; g47_0_25_counter:COUNTER|cnt[3] ; clock        ; clock       ; 0.000        ; 0.000      ; 2.175      ;
; 1.940 ; left_data[2]                    ; input_2[2]                      ; clock        ; clock       ; 0.000        ; 0.004      ; 2.230      ;
; 1.957 ; g47_0_25_counter:COUNTER|cnt[2] ; g47_0_25_counter:COUNTER|cnt[1] ; clock        ; clock       ; 0.000        ; 0.000      ; 2.243      ;
; 1.957 ; g47_0_25_counter:COUNTER|cnt[2] ; g47_0_25_counter:COUNTER|cnt[4] ; clock        ; clock       ; 0.000        ; 0.000      ; 2.243      ;
; 1.957 ; left_rotor_type[0]              ; input_2[0]                      ; clock        ; clock       ; 0.000        ; 0.000      ; 2.243      ;
; 1.957 ; right_ring_shift[3]             ; input_3[1]                      ; clock        ; clock       ; 0.000        ; -0.002     ; 2.241      ;
; 2.013 ; left_ring_shift[3]              ; input_2[3]                      ; clock        ; clock       ; 0.000        ; -0.001     ; 2.298      ;
; 2.023 ; middle_ring_shift[1]            ; input_3[2]                      ; clock        ; clock       ; 0.000        ; -0.001     ; 2.308      ;
; 2.077 ; input_2[0]                      ; input_2[0]                      ; clock        ; clock       ; 0.000        ; 0.000      ; 2.363      ;
; 2.083 ; left_data[3]                    ; input_2[3]                      ; clock        ; clock       ; 0.000        ; -0.001     ; 2.368      ;
; 2.085 ; left_ring_shift[3]              ; input_3[1]                      ; clock        ; clock       ; 0.000        ; -0.003     ; 2.368      ;
; 2.119 ; left_rotor_type[1]              ; input_2[1]                      ; clock        ; clock       ; 0.000        ; -0.001     ; 2.404      ;
; 2.176 ; middle_ring_shift[4]            ; input_2[2]                      ; clock        ; clock       ; 0.000        ; 0.001      ; 2.463      ;
; 2.189 ; middle_ring_shift[3]            ; input_3[1]                      ; clock        ; clock       ; 0.000        ; -0.001     ; 2.474      ;
; 2.199 ; right_rotor_type[0]             ; input_2[0]                      ; clock        ; clock       ; 0.000        ; 0.000      ; 2.485      ;
; 2.216 ; left_ring_shift[2]              ; input_3[1]                      ; clock        ; clock       ; 0.000        ; -0.003     ; 2.499      ;
; 2.218 ; middle_ring_shift[2]            ; input_3[1]                      ; clock        ; clock       ; 0.000        ; -0.001     ; 2.503      ;
; 2.232 ; left_data[1]                    ; input_2[1]                      ; clock        ; clock       ; 0.000        ; -0.001     ; 2.517      ;
; 2.248 ; left_rotor_type[1]              ; input_2[2]                      ; clock        ; clock       ; 0.000        ; -0.001     ; 2.533      ;
; 2.256 ; middle_ring_shift[1]            ; input_clear[3]                  ; clock        ; clock       ; 0.000        ; -0.001     ; 2.541      ;
; 2.268 ; left_ring_shift[4]              ; input_2[3]                      ; clock        ; clock       ; 0.000        ; -0.001     ; 2.553      ;
; 2.280 ; middle_ring_shift[4]            ; input_3[0]                      ; clock        ; clock       ; 0.000        ; -0.001     ; 2.565      ;
; 2.295 ; keypress_state.C                ; left_data[0]                    ; clock        ; clock       ; 0.000        ; 0.000      ; 2.581      ;
; 2.295 ; keypress_state.C                ; left_data[1]                    ; clock        ; clock       ; 0.000        ; 0.000      ; 2.581      ;
; 2.295 ; keypress_state.C                ; left_data[3]                    ; clock        ; clock       ; 0.000        ; 0.000      ; 2.581      ;
; 2.338 ; right_ring_shift[2]             ; input_2[3]                      ; clock        ; clock       ; 0.000        ; 0.000      ; 2.624      ;
; 2.342 ; right_data[1]                   ; input_2[1]                      ; clock        ; clock       ; 0.000        ; 0.000      ; 2.628      ;
; 2.386 ; left_ring_shift[0]              ; input_2[0]                      ; clock        ; clock       ; 0.000        ; 0.000      ; 2.672      ;
; 2.395 ; keypress_state.C                ; right_rotor_type[0]             ; clock        ; clock       ; 0.000        ; 0.000      ; 2.681      ;
; 2.395 ; keypress_state.C                ; right_rotor_type[1]             ; clock        ; clock       ; 0.000        ; 0.000      ; 2.681      ;
; 2.396 ; middle_ring_shift[3]            ; input_2[2]                      ; clock        ; clock       ; 0.000        ; 0.001      ; 2.683      ;
; 2.404 ; middle_data[2]                  ; input_2[2]                      ; clock        ; clock       ; 0.000        ; 0.004      ; 2.694      ;
; 2.413 ; middle_data[3]                  ; input_2[3]                      ; clock        ; clock       ; 0.000        ; 0.001      ; 2.700      ;
; 2.414 ; right_ring_shift[2]             ; input_3[1]                      ; clock        ; clock       ; 0.000        ; -0.002     ; 2.698      ;
; 2.414 ; left_ring_shift[4]              ; input_3[1]                      ; clock        ; clock       ; 0.000        ; -0.003     ; 2.697      ;
; 2.424 ; right_ring_shift[3]             ; input_3[0]                      ; clock        ; clock       ; 0.000        ; -0.002     ; 2.708      ;
; 2.455 ; middle_ring_shift[2]            ; input_3[2]                      ; clock        ; clock       ; 0.000        ; -0.001     ; 2.740      ;
; 2.495 ; input_2[2]                      ; input_2[2]                      ; clock        ; clock       ; 0.000        ; 0.000      ; 2.781      ;
; 2.509 ; right_ring_shift[4]             ; input_3[1]                      ; clock        ; clock       ; 0.000        ; -0.002     ; 2.793      ;
; 2.517 ; keypress_state.C                ; middle_data[0]                  ; clock        ; clock       ; 0.000        ; -0.002     ; 2.801      ;
; 2.517 ; keypress_state.C                ; middle_data[1]                  ; clock        ; clock       ; 0.000        ; -0.002     ; 2.801      ;
; 2.517 ; keypress_state.C                ; middle_data[4]                  ; clock        ; clock       ; 0.000        ; -0.002     ; 2.801      ;
; 2.517 ; keypress_state.C                ; middle_data[3]                  ; clock        ; clock       ; 0.000        ; -0.002     ; 2.801      ;
; 2.522 ; keypress_state.C                ; right_data[1]                   ; clock        ; clock       ; 0.000        ; -0.001     ; 2.807      ;
; 2.522 ; keypress_state.C                ; right_data[3]                   ; clock        ; clock       ; 0.000        ; -0.001     ; 2.807      ;
; 2.525 ; right_ring_shift[4]             ; input_2[2]                      ; clock        ; clock       ; 0.000        ; 0.000      ; 2.811      ;
; 2.548 ; left_ring_shift[3]              ; input_3[2]                      ; clock        ; clock       ; 0.000        ; -0.003     ; 2.831      ;
; 2.549 ; left_ring_shift[3]              ; input_clear[3]                  ; clock        ; clock       ; 0.000        ; -0.003     ; 2.832      ;
; 2.552 ; left_ring_shift[3]              ; input_3[0]                      ; clock        ; clock       ; 0.000        ; -0.003     ; 2.835      ;
; 2.569 ; keypress_state.C                ; middle_rotor_type[0]            ; clock        ; clock       ; 0.000        ; 0.000      ; 2.855      ;
; 2.569 ; keypress_state.C                ; middle_rotor_type[1]            ; clock        ; clock       ; 0.000        ; 0.000      ; 2.855      ;
; 2.575 ; keypress_state.C                ; left_rotor_type[0]              ; clock        ; clock       ; 0.000        ; 0.000      ; 2.861      ;
; 2.575 ; keypress_state.C                ; left_rotor_type[1]              ; clock        ; clock       ; 0.000        ; 0.000      ; 2.861      ;
; 2.583 ; middle_ring_shift[1]            ; input_2[3]                      ; clock        ; clock       ; 0.000        ; 0.001      ; 2.870      ;
; 2.586 ; middle_ring_shift[3]            ; input_3[2]                      ; clock        ; clock       ; 0.000        ; -0.001     ; 2.871      ;
; 2.600 ; middle_rotor_type[1]            ; input_2[1]                      ; clock        ; clock       ; 0.000        ; -0.001     ; 2.885      ;
; 2.605 ; middle_ring_shift[4]            ; input_3[2]                      ; clock        ; clock       ; 0.000        ; -0.001     ; 2.890      ;
; 2.612 ; left_rotor_type[0]              ; input_2[1]                      ; clock        ; clock       ; 0.000        ; -0.001     ; 2.897      ;
; 2.612 ; right_data[3]                   ; input_2[3]                      ; clock        ; clock       ; 0.000        ; 0.000      ; 2.898      ;
; 2.624 ; right_ring_shift[1]             ; input_2[2]                      ; clock        ; clock       ; 0.000        ; 0.000      ; 2.910      ;
; 2.633 ; keypress_state.C                ; keypress_state.B                ; clock        ; clock       ; 0.000        ; 0.001      ; 2.920      ;
; 2.639 ; left_ring_shift[4]              ; input_3[2]                      ; clock        ; clock       ; 0.000        ; -0.003     ; 2.922      ;
; 2.640 ; left_ring_shift[4]              ; input_clear[3]                  ; clock        ; clock       ; 0.000        ; -0.003     ; 2.923      ;
; 2.656 ; middle_ring_shift[3]            ; input_3[0]                      ; clock        ; clock       ; 0.000        ; -0.001     ; 2.941      ;
; 2.659 ; left_ring_shift[2]              ; input_2[3]                      ; clock        ; clock       ; 0.000        ; -0.001     ; 2.944      ;
; 2.663 ; keypress_state.C                ; left_ring_shift[3]              ; clock        ; clock       ; 0.000        ; 0.000      ; 2.949      ;
; 2.663 ; keypress_state.C                ; left_ring_shift[4]              ; clock        ; clock       ; 0.000        ; 0.000      ; 2.949      ;
; 2.663 ; keypress_state.C                ; left_ring_shift[1]              ; clock        ; clock       ; 0.000        ; 0.000      ; 2.949      ;
; 2.663 ; keypress_state.C                ; left_ring_shift[2]              ; clock        ; clock       ; 0.000        ; 0.000      ; 2.949      ;
; 2.663 ; keypress_state.C                ; left_ring_shift[0]              ; clock        ; clock       ; 0.000        ; 0.000      ; 2.949      ;
; 2.683 ; left_ring_shift[2]              ; input_3[0]                      ; clock        ; clock       ; 0.000        ; -0.003     ; 2.966      ;
; 2.685 ; middle_ring_shift[2]            ; input_3[0]                      ; clock        ; clock       ; 0.000        ; -0.001     ; 2.970      ;
; 2.688 ; middle_ring_shift[2]            ; input_clear[3]                  ; clock        ; clock       ; 0.000        ; -0.001     ; 2.973      ;
; 2.729 ; middle_rotor_type[1]            ; input_2[2]                      ; clock        ; clock       ; 0.000        ; -0.001     ; 3.014      ;
+-------+---------------------------------+---------------------------------+--------------+-------------+--------------+------------+------------+


+------------------------------------------------------------------------------------------------------------------+
; Slow Model Minimum Pulse Width: 'clock'                                                                          ;
+--------+--------------+----------------+------------------+-------+------------+---------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock ; Clock Edge ; Target                          ;
+--------+--------------+----------------+------------------+-------+------------+---------------------------------+
; -1.631 ; 1.000        ; 2.631          ; Port Rate        ; clock ; Rise       ; clock                           ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock ; Rise       ; g47_0_25_counter:COUNTER|cnt[0] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock ; Rise       ; g47_0_25_counter:COUNTER|cnt[0] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock ; Rise       ; g47_0_25_counter:COUNTER|cnt[1] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock ; Rise       ; g47_0_25_counter:COUNTER|cnt[1] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock ; Rise       ; g47_0_25_counter:COUNTER|cnt[2] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock ; Rise       ; g47_0_25_counter:COUNTER|cnt[2] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock ; Rise       ; g47_0_25_counter:COUNTER|cnt[3] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock ; Rise       ; g47_0_25_counter:COUNTER|cnt[3] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock ; Rise       ; g47_0_25_counter:COUNTER|cnt[4] ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock ; Rise       ; g47_0_25_counter:COUNTER|cnt[4] ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock ; Rise       ; input_0[0]                      ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock ; Rise       ; input_0[0]                      ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock ; Rise       ; input_0[1]                      ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock ; Rise       ; input_0[1]                      ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock ; Rise       ; input_0[2]                      ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock ; Rise       ; input_0[2]                      ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock ; Rise       ; input_0[3]                      ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock ; Rise       ; input_0[3]                      ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock ; Rise       ; input_0[4]                      ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock ; Rise       ; input_0[4]                      ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock ; Rise       ; input_0[5]                      ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock ; Rise       ; input_0[5]                      ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock ; Rise       ; input_1[0]                      ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock ; Rise       ; input_1[0]                      ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock ; Rise       ; input_1[1]                      ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock ; Rise       ; input_1[1]                      ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock ; Rise       ; input_1[2]                      ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock ; Rise       ; input_1[2]                      ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock ; Rise       ; input_2[0]                      ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock ; Rise       ; input_2[0]                      ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock ; Rise       ; input_2[1]                      ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock ; Rise       ; input_2[1]                      ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock ; Rise       ; input_2[2]                      ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock ; Rise       ; input_2[2]                      ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock ; Rise       ; input_2[3]                      ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock ; Rise       ; input_2[3]                      ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock ; Rise       ; input_2[4]                      ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock ; Rise       ; input_2[4]                      ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock ; Rise       ; input_2[5]                      ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock ; Rise       ; input_2[5]                      ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock ; Rise       ; input_3[0]                      ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock ; Rise       ; input_3[0]                      ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock ; Rise       ; input_3[1]                      ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock ; Rise       ; input_3[1]                      ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock ; Rise       ; input_3[2]                      ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock ; Rise       ; input_3[2]                      ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock ; Rise       ; input_clear[0]                  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock ; Rise       ; input_clear[0]                  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock ; Rise       ; input_clear[1]                  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock ; Rise       ; input_clear[1]                  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock ; Rise       ; input_clear[2]                  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock ; Rise       ; input_clear[2]                  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock ; Rise       ; input_clear[3]                  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock ; Rise       ; input_clear[3]                  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock ; Rise       ; keypress_state.B                ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock ; Rise       ; keypress_state.B                ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock ; Rise       ; keypress_state.C                ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock ; Rise       ; keypress_state.C                ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock ; Rise       ; left_data[0]                    ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock ; Rise       ; left_data[0]                    ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock ; Rise       ; left_data[1]                    ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock ; Rise       ; left_data[1]                    ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock ; Rise       ; left_data[2]                    ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock ; Rise       ; left_data[2]                    ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock ; Rise       ; left_data[3]                    ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock ; Rise       ; left_data[3]                    ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock ; Rise       ; left_data[4]                    ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock ; Rise       ; left_data[4]                    ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock ; Rise       ; left_ring_shift[0]              ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock ; Rise       ; left_ring_shift[0]              ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock ; Rise       ; left_ring_shift[1]              ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock ; Rise       ; left_ring_shift[1]              ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock ; Rise       ; left_ring_shift[2]              ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock ; Rise       ; left_ring_shift[2]              ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock ; Rise       ; left_ring_shift[3]              ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock ; Rise       ; left_ring_shift[3]              ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock ; Rise       ; left_ring_shift[4]              ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock ; Rise       ; left_ring_shift[4]              ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock ; Rise       ; left_rotor_type[0]              ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock ; Rise       ; left_rotor_type[0]              ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock ; Rise       ; left_rotor_type[1]              ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock ; Rise       ; left_rotor_type[1]              ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock ; Rise       ; middle_data[0]                  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock ; Rise       ; middle_data[0]                  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock ; Rise       ; middle_data[1]                  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock ; Rise       ; middle_data[1]                  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock ; Rise       ; middle_data[2]                  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock ; Rise       ; middle_data[2]                  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock ; Rise       ; middle_data[3]                  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock ; Rise       ; middle_data[3]                  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock ; Rise       ; middle_data[4]                  ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock ; Rise       ; middle_data[4]                  ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock ; Rise       ; middle_ring_shift[0]            ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock ; Rise       ; middle_ring_shift[0]            ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock ; Rise       ; middle_ring_shift[1]            ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock ; Rise       ; middle_ring_shift[1]            ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock ; Rise       ; middle_ring_shift[2]            ;
; -0.611 ; 0.500        ; 1.111          ; Low Pulse Width  ; clock ; Rise       ; middle_ring_shift[2]            ;
; -0.611 ; 0.500        ; 1.111          ; High Pulse Width ; clock ; Rise       ; middle_ring_shift[3]            ;
+--------+--------------+----------------+------------------+-------+------------+---------------------------------+


+-------------------------------------------------------------------------------+
; Setup Times                                                                   ;
+-------------------+------------+-------+-------+------------+-----------------+
; Data Port         ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+-------------------+------------+-------+-------+------------+-----------------+
; input_code[*]     ; clock      ; 5.459 ; 5.459 ; Rise       ; clock           ;
;  input_code[0]    ; clock      ; 3.085 ; 3.085 ; Rise       ; clock           ;
;  input_code[1]    ; clock      ; 5.352 ; 5.352 ; Rise       ; clock           ;
;  input_code[2]    ; clock      ; 4.571 ; 4.571 ; Rise       ; clock           ;
;  input_code[3]    ; clock      ; 4.801 ; 4.801 ; Rise       ; clock           ;
;  input_code[4]    ; clock      ; 5.459 ; 5.459 ; Rise       ; clock           ;
; keypress          ; clock      ; 6.527 ; 6.527 ; Rise       ; clock           ;
; setting_init      ; clock      ; 3.399 ; 3.399 ; Rise       ; clock           ;
; setting_mode[*]   ; clock      ; 5.512 ; 5.512 ; Rise       ; clock           ;
;  setting_mode[0]  ; clock      ; 5.512 ; 5.512 ; Rise       ; clock           ;
;  setting_mode[1]  ; clock      ; 4.814 ; 4.814 ; Rise       ; clock           ;
; setting_rotor[*]  ; clock      ; 4.182 ; 4.182 ; Rise       ; clock           ;
;  setting_rotor[0] ; clock      ; 4.182 ; 4.182 ; Rise       ; clock           ;
;  setting_rotor[1] ; clock      ; 4.056 ; 4.056 ; Rise       ; clock           ;
+-------------------+------------+-------+-------+------------+-----------------+


+---------------------------------------------------------------------------------+
; Hold Times                                                                      ;
+-------------------+------------+--------+--------+------------+-----------------+
; Data Port         ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+-------------------+------------+--------+--------+------------+-----------------+
; input_code[*]     ; clock      ; 0.015  ; 0.015  ; Rise       ; clock           ;
;  input_code[0]    ; clock      ; 0.015  ; 0.015  ; Rise       ; clock           ;
;  input_code[1]    ; clock      ; -0.640 ; -0.640 ; Rise       ; clock           ;
;  input_code[2]    ; clock      ; -0.117 ; -0.117 ; Rise       ; clock           ;
;  input_code[3]    ; clock      ; -0.104 ; -0.104 ; Rise       ; clock           ;
;  input_code[4]    ; clock      ; -0.742 ; -0.742 ; Rise       ; clock           ;
; keypress          ; clock      ; -3.469 ; -3.469 ; Rise       ; clock           ;
; setting_init      ; clock      ; 0.373  ; 0.373  ; Rise       ; clock           ;
; setting_mode[*]   ; clock      ; -0.390 ; -0.390 ; Rise       ; clock           ;
;  setting_mode[0]  ; clock      ; -1.478 ; -1.478 ; Rise       ; clock           ;
;  setting_mode[1]  ; clock      ; -0.390 ; -0.390 ; Rise       ; clock           ;
; setting_rotor[*]  ; clock      ; 0.148  ; 0.148  ; Rise       ; clock           ;
;  setting_rotor[0] ; clock      ; -0.231 ; -0.231 ; Rise       ; clock           ;
;  setting_rotor[1] ; clock      ; 0.148  ; 0.148  ; Rise       ; clock           ;
+-------------------+------------+--------+--------+------------+-----------------+


+------------------------------------------------------------------------------+
; Clock to Output Times                                                        ;
+----------------+------------+--------+--------+------------+-----------------+
; Data Port      ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+----------------+------------+--------+--------+------------+-----------------+
; led_error[*]   ; clock      ; 6.929  ; 6.929  ; Rise       ; clock           ;
;  led_error[0]  ; clock      ; 6.929  ; 6.929  ; Rise       ; clock           ;
;  led_error[1]  ; clock      ; 6.901  ; 6.901  ; Rise       ; clock           ;
;  led_error[2]  ; clock      ; 6.900  ; 6.900  ; Rise       ; clock           ;
;  led_error[3]  ; clock      ; 6.898  ; 6.898  ; Rise       ; clock           ;
;  led_error[4]  ; clock      ; 6.910  ; 6.910  ; Rise       ; clock           ;
; segments_0[*]  ; clock      ; 10.638 ; 10.638 ; Rise       ; clock           ;
;  segments_0[0] ; clock      ; 10.516 ; 10.516 ; Rise       ; clock           ;
;  segments_0[1] ; clock      ; 10.316 ; 10.316 ; Rise       ; clock           ;
;  segments_0[2] ; clock      ; 10.308 ; 10.308 ; Rise       ; clock           ;
;  segments_0[3] ; clock      ; 10.079 ; 10.079 ; Rise       ; clock           ;
;  segments_0[4] ; clock      ; 10.146 ; 10.146 ; Rise       ; clock           ;
;  segments_0[5] ; clock      ; 10.077 ; 10.077 ; Rise       ; clock           ;
;  segments_0[6] ; clock      ; 10.638 ; 10.638 ; Rise       ; clock           ;
; segments_1[*]  ; clock      ; 8.923  ; 8.923  ; Rise       ; clock           ;
;  segments_1[0] ; clock      ; 8.923  ; 8.923  ; Rise       ; clock           ;
;  segments_1[1] ; clock      ; 8.163  ; 8.163  ; Rise       ; clock           ;
;  segments_1[2] ; clock      ; 8.539  ; 8.539  ; Rise       ; clock           ;
;  segments_1[3] ; clock      ; 8.558  ; 8.558  ; Rise       ; clock           ;
;  segments_1[4] ; clock      ; 8.180  ; 8.180  ; Rise       ; clock           ;
;  segments_1[5] ; clock      ; 8.920  ; 8.920  ; Rise       ; clock           ;
;  segments_1[6] ; clock      ; 8.425  ; 8.425  ; Rise       ; clock           ;
; segments_2[*]  ; clock      ; 11.596 ; 11.596 ; Rise       ; clock           ;
;  segments_2[0] ; clock      ; 10.984 ; 10.984 ; Rise       ; clock           ;
;  segments_2[1] ; clock      ; 10.914 ; 10.914 ; Rise       ; clock           ;
;  segments_2[2] ; clock      ; 11.596 ; 11.596 ; Rise       ; clock           ;
;  segments_2[3] ; clock      ; 11.217 ; 11.217 ; Rise       ; clock           ;
;  segments_2[4] ; clock      ; 11.592 ; 11.592 ; Rise       ; clock           ;
;  segments_2[5] ; clock      ; 10.938 ; 10.938 ; Rise       ; clock           ;
;  segments_2[6] ; clock      ; 11.290 ; 11.290 ; Rise       ; clock           ;
; segments_3[*]  ; clock      ; 9.248  ; 9.248  ; Rise       ; clock           ;
;  segments_3[0] ; clock      ; 8.932  ; 8.932  ; Rise       ; clock           ;
;  segments_3[1] ; clock      ; 9.109  ; 9.109  ; Rise       ; clock           ;
;  segments_3[2] ; clock      ; 9.107  ; 9.107  ; Rise       ; clock           ;
;  segments_3[3] ; clock      ; 8.920  ; 8.920  ; Rise       ; clock           ;
;  segments_3[4] ; clock      ; 8.879  ; 8.879  ; Rise       ; clock           ;
;  segments_3[5] ; clock      ; 8.920  ; 8.920  ; Rise       ; clock           ;
;  segments_3[6] ; clock      ; 9.248  ; 9.248  ; Rise       ; clock           ;
+----------------+------------+--------+--------+------------+-----------------+


+----------------------------------------------------------------------------+
; Minimum Clock to Output Times                                              ;
+----------------+------------+-------+-------+------------+-----------------+
; Data Port      ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+----------------+------------+-------+-------+------------+-----------------+
; led_error[*]   ; clock      ; 6.898 ; 6.898 ; Rise       ; clock           ;
;  led_error[0]  ; clock      ; 6.929 ; 6.929 ; Rise       ; clock           ;
;  led_error[1]  ; clock      ; 6.901 ; 6.901 ; Rise       ; clock           ;
;  led_error[2]  ; clock      ; 6.900 ; 6.900 ; Rise       ; clock           ;
;  led_error[3]  ; clock      ; 6.898 ; 6.898 ; Rise       ; clock           ;
;  led_error[4]  ; clock      ; 6.910 ; 6.910 ; Rise       ; clock           ;
; segments_0[*]  ; clock      ; 8.206 ; 8.206 ; Rise       ; clock           ;
;  segments_0[0] ; clock      ; 8.250 ; 8.250 ; Rise       ; clock           ;
;  segments_0[1] ; clock      ; 8.206 ; 8.206 ; Rise       ; clock           ;
;  segments_0[2] ; clock      ; 8.363 ; 8.363 ; Rise       ; clock           ;
;  segments_0[3] ; clock      ; 8.287 ; 8.287 ; Rise       ; clock           ;
;  segments_0[4] ; clock      ; 8.272 ; 8.272 ; Rise       ; clock           ;
;  segments_0[5] ; clock      ; 8.361 ; 8.361 ; Rise       ; clock           ;
;  segments_0[6] ; clock      ; 8.670 ; 8.670 ; Rise       ; clock           ;
; segments_1[*]  ; clock      ; 7.014 ; 7.014 ; Rise       ; clock           ;
;  segments_1[0] ; clock      ; 7.399 ; 7.399 ; Rise       ; clock           ;
;  segments_1[1] ; clock      ; 7.184 ; 7.184 ; Rise       ; clock           ;
;  segments_1[2] ; clock      ; 7.014 ; 7.014 ; Rise       ; clock           ;
;  segments_1[3] ; clock      ; 7.034 ; 7.034 ; Rise       ; clock           ;
;  segments_1[4] ; clock      ; 7.196 ; 7.196 ; Rise       ; clock           ;
;  segments_1[5] ; clock      ; 7.398 ; 7.398 ; Rise       ; clock           ;
;  segments_1[6] ; clock      ; 7.446 ; 7.446 ; Rise       ; clock           ;
; segments_2[*]  ; clock      ; 8.885 ; 8.885 ; Rise       ; clock           ;
;  segments_2[0] ; clock      ; 9.062 ; 9.062 ; Rise       ; clock           ;
;  segments_2[1] ; clock      ; 9.277 ; 9.277 ; Rise       ; clock           ;
;  segments_2[2] ; clock      ; 9.531 ; 9.531 ; Rise       ; clock           ;
;  segments_2[3] ; clock      ; 8.885 ; 8.885 ; Rise       ; clock           ;
;  segments_2[4] ; clock      ; 9.228 ; 9.228 ; Rise       ; clock           ;
;  segments_2[5] ; clock      ; 8.926 ; 8.926 ; Rise       ; clock           ;
;  segments_2[6] ; clock      ; 9.379 ; 9.379 ; Rise       ; clock           ;
; segments_3[*]  ; clock      ; 8.519 ; 8.519 ; Rise       ; clock           ;
;  segments_3[0] ; clock      ; 8.574 ; 8.574 ; Rise       ; clock           ;
;  segments_3[1] ; clock      ; 8.750 ; 8.750 ; Rise       ; clock           ;
;  segments_3[2] ; clock      ; 8.747 ; 8.747 ; Rise       ; clock           ;
;  segments_3[3] ; clock      ; 8.562 ; 8.562 ; Rise       ; clock           ;
;  segments_3[4] ; clock      ; 8.519 ; 8.519 ; Rise       ; clock           ;
;  segments_3[5] ; clock      ; 8.561 ; 8.561 ; Rise       ; clock           ;
;  segments_3[6] ; clock      ; 8.888 ; 8.888 ; Rise       ; clock           ;
+----------------+------------+-------+-------+------------+-----------------+


+--------------------------------+
; Fast Model Setup Summary       ;
+-------+--------+---------------+
; Clock ; Slack  ; End Point TNS ;
+-------+--------+---------------+
; clock ; -0.552 ; -13.490       ;
+-------+--------+---------------+


+-------------------------------+
; Fast Model Hold Summary       ;
+-------+-------+---------------+
; Clock ; Slack ; End Point TNS ;
+-------+-------+---------------+
; clock ; 0.215 ; 0.000         ;
+-------+-------+---------------+


-------------------------------
; Fast Model Recovery Summary ;
-------------------------------
No paths to report.


------------------------------
; Fast Model Removal Summary ;
------------------------------
No paths to report.


+----------------------------------------+
; Fast Model Minimum Pulse Width Summary ;
+-------+--------+-----------------------+
; Clock ; Slack  ; End Point TNS         ;
+-------+--------+-----------------------+
; clock ; -1.380 ; -67.380               ;
+-------+--------+-----------------------+


+---------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Setup: 'clock'                                                                                                             ;
+--------+----------------------+---------------------------------+--------------+-------------+--------------+------------+------------+
; Slack  ; From Node            ; To Node                         ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+--------+----------------------+---------------------------------+--------------+-------------+--------------+------------+------------+
; -0.552 ; middle_ring_shift[3] ; input_3[0]                      ; clock        ; clock       ; 1.000        ; 0.000      ; 1.584      ;
; -0.552 ; middle_ring_shift[3] ; input_3[1]                      ; clock        ; clock       ; 1.000        ; 0.000      ; 1.584      ;
; -0.550 ; middle_ring_shift[4] ; input_3[0]                      ; clock        ; clock       ; 1.000        ; 0.000      ; 1.582      ;
; -0.550 ; middle_ring_shift[4] ; input_3[1]                      ; clock        ; clock       ; 1.000        ; 0.000      ; 1.582      ;
; -0.544 ; left_ring_shift[2]   ; input_3[0]                      ; clock        ; clock       ; 1.000        ; -0.002     ; 1.574      ;
; -0.544 ; left_ring_shift[2]   ; input_3[1]                      ; clock        ; clock       ; 1.000        ; -0.002     ; 1.574      ;
; -0.542 ; left_ring_shift[1]   ; input_3[0]                      ; clock        ; clock       ; 1.000        ; -0.002     ; 1.572      ;
; -0.542 ; left_ring_shift[1]   ; input_3[1]                      ; clock        ; clock       ; 1.000        ; -0.002     ; 1.572      ;
; -0.541 ; left_ring_shift[2]   ; input_2[1]                      ; clock        ; clock       ; 1.000        ; -0.001     ; 1.572      ;
; -0.539 ; left_ring_shift[1]   ; input_2[1]                      ; clock        ; clock       ; 1.000        ; -0.001     ; 1.570      ;
; -0.528 ; middle_ring_shift[3] ; input_2[1]                      ; clock        ; clock       ; 1.000        ; 0.001      ; 1.561      ;
; -0.526 ; middle_ring_shift[4] ; input_2[1]                      ; clock        ; clock       ; 1.000        ; 0.001      ; 1.559      ;
; -0.511 ; keypress_state.B     ; keypress_state.C                ; clock        ; clock       ; 1.000        ; 0.000      ; 1.543      ;
; -0.502 ; middle_ring_shift[2] ; input_3[0]                      ; clock        ; clock       ; 1.000        ; 0.000      ; 1.534      ;
; -0.502 ; middle_ring_shift[2] ; input_3[1]                      ; clock        ; clock       ; 1.000        ; 0.000      ; 1.534      ;
; -0.497 ; keypress_state.C     ; g47_0_25_counter:COUNTER|cnt[0] ; clock        ; clock       ; 1.000        ; 0.000      ; 1.529      ;
; -0.497 ; keypress_state.C     ; g47_0_25_counter:COUNTER|cnt[2] ; clock        ; clock       ; 1.000        ; 0.000      ; 1.529      ;
; -0.497 ; keypress_state.C     ; g47_0_25_counter:COUNTER|cnt[3] ; clock        ; clock       ; 1.000        ; 0.000      ; 1.529      ;
; -0.497 ; keypress_state.C     ; g47_0_25_counter:COUNTER|cnt[4] ; clock        ; clock       ; 1.000        ; 0.000      ; 1.529      ;
; -0.497 ; keypress_state.C     ; g47_0_25_counter:COUNTER|cnt[1] ; clock        ; clock       ; 1.000        ; 0.000      ; 1.529      ;
; -0.496 ; right_ring_shift[1]  ; input_3[0]                      ; clock        ; clock       ; 1.000        ; -0.001     ; 1.527      ;
; -0.496 ; right_ring_shift[1]  ; input_3[1]                      ; clock        ; clock       ; 1.000        ; -0.001     ; 1.527      ;
; -0.484 ; right_ring_shift[4]  ; input_3[0]                      ; clock        ; clock       ; 1.000        ; -0.001     ; 1.515      ;
; -0.484 ; right_ring_shift[4]  ; input_3[1]                      ; clock        ; clock       ; 1.000        ; -0.001     ; 1.515      ;
; -0.478 ; middle_ring_shift[2] ; input_2[1]                      ; clock        ; clock       ; 1.000        ; 0.001      ; 1.511      ;
; -0.470 ; left_ring_shift[4]   ; input_2[1]                      ; clock        ; clock       ; 1.000        ; -0.001     ; 1.501      ;
; -0.468 ; left_ring_shift[4]   ; input_3[0]                      ; clock        ; clock       ; 1.000        ; -0.002     ; 1.498      ;
; -0.468 ; left_ring_shift[4]   ; input_3[1]                      ; clock        ; clock       ; 1.000        ; -0.002     ; 1.498      ;
; -0.467 ; right_ring_shift[2]  ; input_3[0]                      ; clock        ; clock       ; 1.000        ; -0.001     ; 1.498      ;
; -0.467 ; right_ring_shift[2]  ; input_3[1]                      ; clock        ; clock       ; 1.000        ; -0.001     ; 1.498      ;
; -0.433 ; right_ring_shift[4]  ; input_2[1]                      ; clock        ; clock       ; 1.000        ; 0.000      ; 1.465      ;
; -0.427 ; left_ring_shift[3]   ; input_3[0]                      ; clock        ; clock       ; 1.000        ; -0.002     ; 1.457      ;
; -0.427 ; left_ring_shift[3]   ; input_3[1]                      ; clock        ; clock       ; 1.000        ; -0.002     ; 1.457      ;
; -0.424 ; left_ring_shift[3]   ; input_2[1]                      ; clock        ; clock       ; 1.000        ; -0.001     ; 1.455      ;
; -0.422 ; right_ring_shift[3]  ; input_3[0]                      ; clock        ; clock       ; 1.000        ; -0.001     ; 1.453      ;
; -0.422 ; right_ring_shift[3]  ; input_3[1]                      ; clock        ; clock       ; 1.000        ; -0.001     ; 1.453      ;
; -0.422 ; right_ring_shift[1]  ; input_2[1]                      ; clock        ; clock       ; 1.000        ; 0.000      ; 1.454      ;
; -0.414 ; right_rotor_type[0]  ; input_2[1]                      ; clock        ; clock       ; 1.000        ; -0.001     ; 1.445      ;
; -0.411 ; right_ring_shift[2]  ; input_2[1]                      ; clock        ; clock       ; 1.000        ; 0.000      ; 1.443      ;
; -0.405 ; right_data[3]        ; input_2[3]                      ; clock        ; clock       ; 1.000        ; 0.000      ; 1.437      ;
; -0.395 ; left_ring_shift[2]   ; input_2[3]                      ; clock        ; clock       ; 1.000        ; -0.001     ; 1.426      ;
; -0.393 ; left_ring_shift[1]   ; input_2[3]                      ; clock        ; clock       ; 1.000        ; -0.001     ; 1.424      ;
; -0.386 ; middle_rotor_type[0] ; input_2[1]                      ; clock        ; clock       ; 1.000        ; -0.001     ; 1.417      ;
; -0.385 ; middle_ring_shift[1] ; input_3[0]                      ; clock        ; clock       ; 1.000        ; 0.000      ; 1.417      ;
; -0.385 ; middle_ring_shift[1] ; input_3[1]                      ; clock        ; clock       ; 1.000        ; 0.000      ; 1.417      ;
; -0.369 ; right_rotor_type[1]  ; input_2[1]                      ; clock        ; clock       ; 1.000        ; -0.001     ; 1.400      ;
; -0.367 ; keypress_state.C     ; middle_data[2]                  ; clock        ; clock       ; 1.000        ; -0.004     ; 1.395      ;
; -0.362 ; right_ring_shift[2]  ; input_2[2]                      ; clock        ; clock       ; 1.000        ; 0.000      ; 1.394      ;
; -0.361 ; middle_ring_shift[1] ; input_2[1]                      ; clock        ; clock       ; 1.000        ; 0.001      ; 1.394      ;
; -0.353 ; keypress_state.C     ; right_ring_shift[0]             ; clock        ; clock       ; 1.000        ; 0.001      ; 1.386      ;
; -0.352 ; right_ring_shift[3]  ; input_2[3]                      ; clock        ; clock       ; 1.000        ; 0.000      ; 1.384      ;
; -0.348 ; right_ring_shift[3]  ; input_2[1]                      ; clock        ; clock       ; 1.000        ; 0.000      ; 1.380      ;
; -0.331 ; right_ring_shift[1]  ; input_2[3]                      ; clock        ; clock       ; 1.000        ; 0.000      ; 1.363      ;
; -0.329 ; middle_ring_shift[1] ; input_2[3]                      ; clock        ; clock       ; 1.000        ; 0.001      ; 1.362      ;
; -0.326 ; right_ring_shift[4]  ; input_2[3]                      ; clock        ; clock       ; 1.000        ; 0.000      ; 1.358      ;
; -0.325 ; middle_ring_shift[4] ; input_2[3]                      ; clock        ; clock       ; 1.000        ; 0.001      ; 1.358      ;
; -0.319 ; left_ring_shift[4]   ; input_2[3]                      ; clock        ; clock       ; 1.000        ; -0.001     ; 1.350      ;
; -0.303 ; right_ring_shift[1]  ; input_clear[3]                  ; clock        ; clock       ; 1.000        ; -0.001     ; 1.334      ;
; -0.301 ; right_ring_shift[2]  ; input_2[3]                      ; clock        ; clock       ; 1.000        ; 0.000      ; 1.333      ;
; -0.294 ; right_rotor_type[0]  ; input_2[2]                      ; clock        ; clock       ; 1.000        ; -0.001     ; 1.325      ;
; -0.291 ; right_ring_shift[4]  ; input_clear[3]                  ; clock        ; clock       ; 1.000        ; -0.001     ; 1.322      ;
; -0.286 ; left_ring_shift[2]   ; input_2[2]                      ; clock        ; clock       ; 1.000        ; -0.001     ; 1.317      ;
; -0.286 ; left_ring_shift[1]   ; input_2[2]                      ; clock        ; clock       ; 1.000        ; -0.001     ; 1.317      ;
; -0.280 ; middle_data[3]       ; input_2[3]                      ; clock        ; clock       ; 1.000        ; 0.001      ; 1.313      ;
; -0.278 ; left_ring_shift[3]   ; input_2[3]                      ; clock        ; clock       ; 1.000        ; -0.001     ; 1.309      ;
; -0.274 ; right_ring_shift[2]  ; input_clear[3]                  ; clock        ; clock       ; 1.000        ; -0.001     ; 1.305      ;
; -0.266 ; middle_rotor_type[0] ; input_2[2]                      ; clock        ; clock       ; 1.000        ; -0.001     ; 1.297      ;
; -0.265 ; keypress_state.C     ; left_data[4]                    ; clock        ; clock       ; 1.000        ; 0.001      ; 1.298      ;
; -0.262 ; middle_ring_shift[0] ; input_2[0]                      ; clock        ; clock       ; 1.000        ; 0.002      ; 1.296      ;
; -0.262 ; middle_rotor_type[1] ; input_2[1]                      ; clock        ; clock       ; 1.000        ; -0.001     ; 1.293      ;
; -0.261 ; middle_ring_shift[3] ; input_2[3]                      ; clock        ; clock       ; 1.000        ; 0.001      ; 1.294      ;
; -0.261 ; middle_ring_shift[2] ; input_2[3]                      ; clock        ; clock       ; 1.000        ; 0.001      ; 1.294      ;
; -0.257 ; right_ring_shift[3]  ; input_2[2]                      ; clock        ; clock       ; 1.000        ; 0.000      ; 1.289      ;
; -0.255 ; keypress_state.C     ; right_data[2]                   ; clock        ; clock       ; 1.000        ; -0.004     ; 1.283      ;
; -0.253 ; keypress_state.C     ; middle_ring_shift[2]            ; clock        ; clock       ; 1.000        ; -0.002     ; 1.283      ;
; -0.253 ; keypress_state.C     ; middle_ring_shift[1]            ; clock        ; clock       ; 1.000        ; -0.002     ; 1.283      ;
; -0.253 ; keypress_state.C     ; middle_ring_shift[3]            ; clock        ; clock       ; 1.000        ; -0.002     ; 1.283      ;
; -0.253 ; keypress_state.C     ; middle_ring_shift[4]            ; clock        ; clock       ; 1.000        ; -0.002     ; 1.283      ;
; -0.253 ; keypress_state.C     ; middle_ring_shift[0]            ; clock        ; clock       ; 1.000        ; -0.002     ; 1.283      ;
; -0.251 ; keypress_state.C     ; right_data[0]                   ; clock        ; clock       ; 1.000        ; 0.001      ; 1.284      ;
; -0.250 ; keypress_state.C     ; left_data[2]                    ; clock        ; clock       ; 1.000        ; -0.004     ; 1.278      ;
; -0.250 ; keypress_state.C     ; right_data[4]                   ; clock        ; clock       ; 1.000        ; 0.001      ; 1.283      ;
; -0.249 ; right_rotor_type[1]  ; input_2[2]                      ; clock        ; clock       ; 1.000        ; -0.001     ; 1.280      ;
; -0.243 ; left_data[0]         ; input_2[0]                      ; clock        ; clock       ; 1.000        ; 0.000      ; 1.275      ;
; -0.236 ; keypress_state.C     ; right_ring_shift[2]             ; clock        ; clock       ; 1.000        ; -0.001     ; 1.267      ;
; -0.236 ; keypress_state.C     ; right_ring_shift[3]             ; clock        ; clock       ; 1.000        ; -0.001     ; 1.267      ;
; -0.236 ; keypress_state.C     ; right_ring_shift[4]             ; clock        ; clock       ; 1.000        ; -0.001     ; 1.267      ;
; -0.236 ; keypress_state.C     ; right_ring_shift[1]             ; clock        ; clock       ; 1.000        ; -0.001     ; 1.267      ;
; -0.236 ; middle_data[0]       ; input_2[0]                      ; clock        ; clock       ; 1.000        ; 0.002      ; 1.270      ;
; -0.235 ; right_ring_shift[0]  ; input_2[0]                      ; clock        ; clock       ; 1.000        ; -0.001     ; 1.266      ;
; -0.232 ; keypress_state.C     ; keypress_state.B                ; clock        ; clock       ; 1.000        ; 0.000      ; 1.264      ;
; -0.229 ; left_rotor_type[0]   ; input_2[1]                      ; clock        ; clock       ; 1.000        ; -0.001     ; 1.260      ;
; -0.229 ; right_ring_shift[3]  ; input_clear[3]                  ; clock        ; clock       ; 1.000        ; -0.001     ; 1.260      ;
; -0.221 ; input_2[1]           ; input_2[1]                      ; clock        ; clock       ; 1.000        ; 0.000      ; 1.253      ;
; -0.219 ; left_ring_shift[4]   ; input_2[2]                      ; clock        ; clock       ; 1.000        ; -0.001     ; 1.250      ;
; -0.213 ; right_ring_shift[1]  ; input_3[2]                      ; clock        ; clock       ; 1.000        ; -0.001     ; 1.244      ;
; -0.213 ; right_data[0]        ; input_2[0]                      ; clock        ; clock       ; 1.000        ; -0.001     ; 1.244      ;
; -0.210 ; left_ring_shift[2]   ; input_clear[3]                  ; clock        ; clock       ; 1.000        ; -0.002     ; 1.240      ;
; -0.210 ; left_ring_shift[2]   ; input_3[2]                      ; clock        ; clock       ; 1.000        ; -0.002     ; 1.240      ;
; -0.208 ; left_ring_shift[1]   ; input_clear[3]                  ; clock        ; clock       ; 1.000        ; -0.002     ; 1.238      ;
+--------+----------------------+---------------------------------+--------------+-------------+--------------+------------+------------+


+-------------------------------------------------------------------------------------------------------------------------------------------------+
; Fast Model Hold: 'clock'                                                                                                                        ;
+-------+---------------------------------+---------------------------------+--------------+-------------+--------------+------------+------------+
; Slack ; From Node                       ; To Node                         ; Launch Clock ; Latch Clock ; Relationship ; Clock Skew ; Data Delay ;
+-------+---------------------------------+---------------------------------+--------------+-------------+--------------+------------+------------+
; 0.215 ; g47_0_25_counter:COUNTER|cnt[1] ; g47_0_25_counter:COUNTER|cnt[1] ; clock        ; clock       ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; input_3[2]                      ; input_3[2]                      ; clock        ; clock       ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; input_2[5]                      ; input_2[5]                      ; clock        ; clock       ; 0.000        ; 0.000      ; 0.367      ;
; 0.215 ; reflector_type                  ; reflector_type                  ; clock        ; clock       ; 0.000        ; 0.000      ; 0.367      ;
; 0.366 ; g47_0_25_counter:COUNTER|cnt[2] ; g47_0_25_counter:COUNTER|cnt[2] ; clock        ; clock       ; 0.000        ; 0.000      ; 0.518      ;
; 0.368 ; g47_0_25_counter:COUNTER|cnt[0] ; g47_0_25_counter:COUNTER|cnt[0] ; clock        ; clock       ; 0.000        ; 0.000      ; 0.520      ;
; 0.382 ; g47_0_25_counter:COUNTER|cnt[1] ; g47_0_25_counter:COUNTER|cnt[4] ; clock        ; clock       ; 0.000        ; 0.000      ; 0.534      ;
; 0.383 ; g47_0_25_counter:COUNTER|cnt[1] ; g47_0_25_counter:COUNTER|cnt[3] ; clock        ; clock       ; 0.000        ; 0.000      ; 0.535      ;
; 0.404 ; input_0[0]                      ; input_0[0]                      ; clock        ; clock       ; 0.000        ; 0.000      ; 0.556      ;
; 0.410 ; g47_0_25_counter:COUNTER|cnt[4] ; g47_0_25_counter:COUNTER|cnt[4] ; clock        ; clock       ; 0.000        ; 0.000      ; 0.562      ;
; 0.501 ; g47_0_25_counter:COUNTER|cnt[1] ; g47_0_25_counter:COUNTER|cnt[2] ; clock        ; clock       ; 0.000        ; 0.000      ; 0.653      ;
; 0.533 ; keypress_state.C                ; reflector_type                  ; clock        ; clock       ; 0.000        ; 0.000      ; 0.685      ;
; 0.533 ; g47_0_25_counter:COUNTER|cnt[3] ; g47_0_25_counter:COUNTER|cnt[3] ; clock        ; clock       ; 0.000        ; 0.000      ; 0.685      ;
; 0.540 ; g47_0_25_counter:COUNTER|cnt[4] ; g47_0_25_counter:COUNTER|cnt[3] ; clock        ; clock       ; 0.000        ; 0.000      ; 0.692      ;
; 0.541 ; g47_0_25_counter:COUNTER|cnt[0] ; g47_0_25_counter:COUNTER|cnt[2] ; clock        ; clock       ; 0.000        ; 0.000      ; 0.693      ;
; 0.542 ; g47_0_25_counter:COUNTER|cnt[4] ; g47_0_25_counter:COUNTER|cnt[1] ; clock        ; clock       ; 0.000        ; 0.000      ; 0.694      ;
; 0.552 ; reflector_type                  ; input_2[0]                      ; clock        ; clock       ; 0.000        ; 0.000      ; 0.704      ;
; 0.557 ; middle_data[4]                  ; input_2[4]                      ; clock        ; clock       ; 0.000        ; 0.001      ; 0.710      ;
; 0.559 ; right_data[4]                   ; input_2[4]                      ; clock        ; clock       ; 0.000        ; -0.002     ; 0.709      ;
; 0.579 ; left_data[4]                    ; input_2[4]                      ; clock        ; clock       ; 0.000        ; -0.002     ; 0.729      ;
; 0.619 ; g47_0_25_counter:COUNTER|cnt[0] ; g47_0_25_counter:COUNTER|cnt[3] ; clock        ; clock       ; 0.000        ; 0.000      ; 0.771      ;
; 0.621 ; g47_0_25_counter:COUNTER|cnt[0] ; g47_0_25_counter:COUNTER|cnt[1] ; clock        ; clock       ; 0.000        ; 0.000      ; 0.773      ;
; 0.621 ; g47_0_25_counter:COUNTER|cnt[0] ; g47_0_25_counter:COUNTER|cnt[4] ; clock        ; clock       ; 0.000        ; 0.000      ; 0.773      ;
; 0.669 ; g47_0_25_counter:COUNTER|cnt[2] ; g47_0_25_counter:COUNTER|cnt[3] ; clock        ; clock       ; 0.000        ; 0.000      ; 0.821      ;
; 0.669 ; g47_0_25_counter:COUNTER|cnt[3] ; g47_0_25_counter:COUNTER|cnt[1] ; clock        ; clock       ; 0.000        ; 0.000      ; 0.821      ;
; 0.669 ; g47_0_25_counter:COUNTER|cnt[3] ; g47_0_25_counter:COUNTER|cnt[4] ; clock        ; clock       ; 0.000        ; 0.000      ; 0.821      ;
; 0.685 ; middle_ring_shift[4]            ; input_3[1]                      ; clock        ; clock       ; 0.000        ; 0.000      ; 0.837      ;
; 0.704 ; g47_0_25_counter:COUNTER|cnt[2] ; g47_0_25_counter:COUNTER|cnt[4] ; clock        ; clock       ; 0.000        ; 0.000      ; 0.856      ;
; 0.726 ; left_rotor_type[0]              ; input_2[0]                      ; clock        ; clock       ; 0.000        ; 0.000      ; 0.878      ;
; 0.744 ; left_data[2]                    ; input_2[2]                      ; clock        ; clock       ; 0.000        ; 0.003      ; 0.899      ;
; 0.747 ; left_ring_shift[3]              ; input_2[3]                      ; clock        ; clock       ; 0.000        ; -0.001     ; 0.898      ;
; 0.747 ; g47_0_25_counter:COUNTER|cnt[2] ; g47_0_25_counter:COUNTER|cnt[1] ; clock        ; clock       ; 0.000        ; 0.000      ; 0.899      ;
; 0.758 ; right_ring_shift[3]             ; input_3[1]                      ; clock        ; clock       ; 0.000        ; -0.001     ; 0.909      ;
; 0.761 ; middle_ring_shift[1]            ; input_3[2]                      ; clock        ; clock       ; 0.000        ; 0.000      ; 0.913      ;
; 0.765 ; input_2[0]                      ; input_2[0]                      ; clock        ; clock       ; 0.000        ; 0.000      ; 0.917      ;
; 0.798 ; middle_ring_shift[3]            ; input_3[1]                      ; clock        ; clock       ; 0.000        ; 0.000      ; 0.950      ;
; 0.799 ; left_ring_shift[3]              ; input_3[1]                      ; clock        ; clock       ; 0.000        ; -0.002     ; 0.949      ;
; 0.802 ; middle_ring_shift[2]            ; input_3[1]                      ; clock        ; clock       ; 0.000        ; 0.000      ; 0.954      ;
; 0.802 ; left_data[3]                    ; input_2[3]                      ; clock        ; clock       ; 0.000        ; -0.001     ; 0.953      ;
; 0.811 ; left_rotor_type[1]              ; input_2[1]                      ; clock        ; clock       ; 0.000        ; -0.001     ; 0.962      ;
; 0.813 ; right_rotor_type[0]             ; input_2[0]                      ; clock        ; clock       ; 0.000        ; 0.000      ; 0.965      ;
; 0.822 ; middle_ring_shift[4]            ; input_2[2]                      ; clock        ; clock       ; 0.000        ; 0.001      ; 0.975      ;
; 0.833 ; left_ring_shift[4]              ; input_2[3]                      ; clock        ; clock       ; 0.000        ; -0.001     ; 0.984      ;
; 0.838 ; left_ring_shift[2]              ; input_3[1]                      ; clock        ; clock       ; 0.000        ; -0.002     ; 0.988      ;
; 0.849 ; middle_ring_shift[1]            ; input_clear[3]                  ; clock        ; clock       ; 0.000        ; 0.000      ; 1.001      ;
; 0.852 ; left_rotor_type[1]              ; input_2[2]                      ; clock        ; clock       ; 0.000        ; -0.001     ; 1.003      ;
; 0.856 ; left_data[1]                    ; input_2[1]                      ; clock        ; clock       ; 0.000        ; -0.001     ; 1.007      ;
; 0.860 ; right_data[1]                   ; input_2[1]                      ; clock        ; clock       ; 0.000        ; 0.000      ; 1.012      ;
; 0.868 ; middle_ring_shift[4]            ; input_3[0]                      ; clock        ; clock       ; 0.000        ; 0.000      ; 1.020      ;
; 0.874 ; middle_ring_shift[3]            ; input_2[2]                      ; clock        ; clock       ; 0.000        ; 0.001      ; 1.027      ;
; 0.876 ; right_ring_shift[2]             ; input_2[3]                      ; clock        ; clock       ; 0.000        ; 0.000      ; 1.028      ;
; 0.878 ; middle_ring_shift[2]            ; input_3[2]                      ; clock        ; clock       ; 0.000        ; 0.000      ; 1.030      ;
; 0.894 ; right_ring_shift[2]             ; input_3[1]                      ; clock        ; clock       ; 0.000        ; -0.001     ; 1.045      ;
; 0.906 ; middle_data[2]                  ; input_2[2]                      ; clock        ; clock       ; 0.000        ; 0.003      ; 1.061      ;
; 0.907 ; middle_data[3]                  ; input_2[3]                      ; clock        ; clock       ; 0.000        ; 0.001      ; 1.060      ;
; 0.908 ; left_ring_shift[4]              ; input_3[1]                      ; clock        ; clock       ; 0.000        ; -0.002     ; 1.058      ;
; 0.913 ; input_2[2]                      ; input_2[2]                      ; clock        ; clock       ; 0.000        ; 0.000      ; 1.065      ;
; 0.914 ; left_ring_shift[0]              ; input_2[0]                      ; clock        ; clock       ; 0.000        ; 0.000      ; 1.066      ;
; 0.916 ; right_ring_shift[4]             ; input_3[1]                      ; clock        ; clock       ; 0.000        ; -0.001     ; 1.067      ;
; 0.926 ; middle_ring_shift[4]            ; input_3[2]                      ; clock        ; clock       ; 0.000        ; 0.000      ; 1.078      ;
; 0.928 ; middle_ring_shift[3]            ; input_3[2]                      ; clock        ; clock       ; 0.000        ; 0.000      ; 1.080      ;
; 0.937 ; keypress_state.C                ; left_data[0]                    ; clock        ; clock       ; 0.000        ; 0.000      ; 1.089      ;
; 0.937 ; keypress_state.C                ; left_data[1]                    ; clock        ; clock       ; 0.000        ; 0.000      ; 1.089      ;
; 0.937 ; keypress_state.C                ; left_data[3]                    ; clock        ; clock       ; 0.000        ; 0.000      ; 1.089      ;
; 0.939 ; right_data[3]                   ; input_2[3]                      ; clock        ; clock       ; 0.000        ; 0.000      ; 1.091      ;
; 0.941 ; right_ring_shift[3]             ; input_3[0]                      ; clock        ; clock       ; 0.000        ; -0.001     ; 1.092      ;
; 0.942 ; left_rotor_type[0]              ; input_2[1]                      ; clock        ; clock       ; 0.000        ; -0.001     ; 1.093      ;
; 0.953 ; right_ring_shift[4]             ; input_2[2]                      ; clock        ; clock       ; 0.000        ; 0.000      ; 1.105      ;
; 0.962 ; left_ring_shift[2]              ; input_2[3]                      ; clock        ; clock       ; 0.000        ; -0.001     ; 1.113      ;
; 0.966 ; middle_ring_shift[2]            ; input_clear[3]                  ; clock        ; clock       ; 0.000        ; 0.000      ; 1.118      ;
; 0.972 ; right_ring_shift[1]             ; input_2[2]                      ; clock        ; clock       ; 0.000        ; 0.000      ; 1.124      ;
; 0.973 ; left_ring_shift[3]              ; input_3[2]                      ; clock        ; clock       ; 0.000        ; -0.002     ; 1.123      ;
; 0.973 ; left_ring_shift[3]              ; input_clear[3]                  ; clock        ; clock       ; 0.000        ; -0.002     ; 1.123      ;
; 0.974 ; middle_ring_shift[1]            ; input_2[3]                      ; clock        ; clock       ; 0.000        ; 0.001      ; 1.127      ;
; 0.975 ; keypress_state.C                ; right_rotor_type[0]             ; clock        ; clock       ; 0.000        ; 0.000      ; 1.127      ;
; 0.975 ; keypress_state.C                ; right_rotor_type[1]             ; clock        ; clock       ; 0.000        ; 0.000      ; 1.127      ;
; 0.981 ; middle_rotor_type[1]            ; input_2[1]                      ; clock        ; clock       ; 0.000        ; -0.001     ; 1.132      ;
; 0.981 ; middle_ring_shift[3]            ; input_3[0]                      ; clock        ; clock       ; 0.000        ; 0.000      ; 1.133      ;
; 0.982 ; left_ring_shift[3]              ; input_3[0]                      ; clock        ; clock       ; 0.000        ; -0.002     ; 1.132      ;
; 0.985 ; middle_ring_shift[2]            ; input_3[0]                      ; clock        ; clock       ; 0.000        ; 0.000      ; 1.137      ;
; 0.987 ; middle_ring_shift[1]            ; input_2[2]                      ; clock        ; clock       ; 0.000        ; 0.001      ; 1.140      ;
; 0.989 ; left_rotor_type[0]              ; input_2[2]                      ; clock        ; clock       ; 0.000        ; -0.001     ; 1.140      ;
; 0.995 ; middle_ring_shift[2]            ; input_2[2]                      ; clock        ; clock       ; 0.000        ; 0.001      ; 1.148      ;
; 1.002 ; left_ring_shift[1]              ; input_2[3]                      ; clock        ; clock       ; 0.000        ; -0.001     ; 1.153      ;
; 1.012 ; input_2[1]                      ; input_2[1]                      ; clock        ; clock       ; 0.000        ; 0.000      ; 1.164      ;
; 1.014 ; middle_ring_shift[4]            ; input_clear[3]                  ; clock        ; clock       ; 0.000        ; 0.000      ; 1.166      ;
; 1.014 ; left_ring_shift[4]              ; input_3[2]                      ; clock        ; clock       ; 0.000        ; -0.002     ; 1.164      ;
; 1.014 ; left_ring_shift[4]              ; input_clear[3]                  ; clock        ; clock       ; 0.000        ; -0.002     ; 1.164      ;
; 1.016 ; middle_ring_shift[3]            ; input_clear[3]                  ; clock        ; clock       ; 0.000        ; 0.000      ; 1.168      ;
; 1.017 ; middle_data[1]                  ; input_2[1]                      ; clock        ; clock       ; 0.000        ; 0.001      ; 1.170      ;
; 1.018 ; right_data[2]                   ; input_2[2]                      ; clock        ; clock       ; 0.000        ; 0.003      ; 1.173      ;
; 1.019 ; right_ring_shift[3]             ; input_3[2]                      ; clock        ; clock       ; 0.000        ; -0.001     ; 1.170      ;
; 1.020 ; keypress_state.C                ; right_data[1]                   ; clock        ; clock       ; 0.000        ; -0.001     ; 1.171      ;
; 1.020 ; keypress_state.C                ; right_data[3]                   ; clock        ; clock       ; 0.000        ; -0.001     ; 1.171      ;
; 1.020 ; middle_rotor_type[0]            ; input_2[0]                      ; clock        ; clock       ; 0.000        ; 0.000      ; 1.172      ;
; 1.021 ; left_ring_shift[2]              ; input_3[0]                      ; clock        ; clock       ; 0.000        ; -0.002     ; 1.171      ;
; 1.022 ; middle_rotor_type[1]            ; input_2[2]                      ; clock        ; clock       ; 0.000        ; -0.001     ; 1.173      ;
; 1.034 ; keypress_state.C                ; middle_data[0]                  ; clock        ; clock       ; 0.000        ; -0.002     ; 1.184      ;
; 1.034 ; keypress_state.C                ; middle_data[1]                  ; clock        ; clock       ; 0.000        ; -0.002     ; 1.184      ;
; 1.034 ; keypress_state.C                ; middle_data[4]                  ; clock        ; clock       ; 0.000        ; -0.002     ; 1.184      ;
+-------+---------------------------------+---------------------------------+--------------+-------------+--------------+------------+------------+


+------------------------------------------------------------------------------------------------------------------+
; Fast Model Minimum Pulse Width: 'clock'                                                                          ;
+--------+--------------+----------------+------------------+-------+------------+---------------------------------+
; Slack  ; Actual Width ; Required Width ; Type             ; Clock ; Clock Edge ; Target                          ;
+--------+--------------+----------------+------------------+-------+------------+---------------------------------+
; -1.380 ; 1.000        ; 2.380          ; Port Rate        ; clock ; Rise       ; clock                           ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; g47_0_25_counter:COUNTER|cnt[0] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; g47_0_25_counter:COUNTER|cnt[0] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; g47_0_25_counter:COUNTER|cnt[1] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; g47_0_25_counter:COUNTER|cnt[1] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; g47_0_25_counter:COUNTER|cnt[2] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; g47_0_25_counter:COUNTER|cnt[2] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; g47_0_25_counter:COUNTER|cnt[3] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; g47_0_25_counter:COUNTER|cnt[3] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; g47_0_25_counter:COUNTER|cnt[4] ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; g47_0_25_counter:COUNTER|cnt[4] ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; input_0[0]                      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; input_0[0]                      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; input_0[1]                      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; input_0[1]                      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; input_0[2]                      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; input_0[2]                      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; input_0[3]                      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; input_0[3]                      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; input_0[4]                      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; input_0[4]                      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; input_0[5]                      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; input_0[5]                      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; input_1[0]                      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; input_1[0]                      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; input_1[1]                      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; input_1[1]                      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; input_1[2]                      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; input_1[2]                      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; input_2[0]                      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; input_2[0]                      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; input_2[1]                      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; input_2[1]                      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; input_2[2]                      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; input_2[2]                      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; input_2[3]                      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; input_2[3]                      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; input_2[4]                      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; input_2[4]                      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; input_2[5]                      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; input_2[5]                      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; input_3[0]                      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; input_3[0]                      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; input_3[1]                      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; input_3[1]                      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; input_3[2]                      ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; input_3[2]                      ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; input_clear[0]                  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; input_clear[0]                  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; input_clear[1]                  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; input_clear[1]                  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; input_clear[2]                  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; input_clear[2]                  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; input_clear[3]                  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; input_clear[3]                  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; keypress_state.B                ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; keypress_state.B                ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; keypress_state.C                ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; keypress_state.C                ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; left_data[0]                    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; left_data[0]                    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; left_data[1]                    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; left_data[1]                    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; left_data[2]                    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; left_data[2]                    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; left_data[3]                    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; left_data[3]                    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; left_data[4]                    ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; left_data[4]                    ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; left_ring_shift[0]              ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; left_ring_shift[0]              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; left_ring_shift[1]              ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; left_ring_shift[1]              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; left_ring_shift[2]              ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; left_ring_shift[2]              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; left_ring_shift[3]              ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; left_ring_shift[3]              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; left_ring_shift[4]              ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; left_ring_shift[4]              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; left_rotor_type[0]              ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; left_rotor_type[0]              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; left_rotor_type[1]              ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; left_rotor_type[1]              ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; middle_data[0]                  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; middle_data[0]                  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; middle_data[1]                  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; middle_data[1]                  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; middle_data[2]                  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; middle_data[2]                  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; middle_data[3]                  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; middle_data[3]                  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; middle_data[4]                  ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; middle_data[4]                  ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; middle_ring_shift[0]            ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; middle_ring_shift[0]            ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; middle_ring_shift[1]            ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; middle_ring_shift[1]            ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; middle_ring_shift[2]            ;
; -0.500 ; 0.500        ; 1.000          ; Low Pulse Width  ; clock ; Rise       ; middle_ring_shift[2]            ;
; -0.500 ; 0.500        ; 1.000          ; High Pulse Width ; clock ; Rise       ; middle_ring_shift[3]            ;
+--------+--------------+----------------+------------------+-------+------------+---------------------------------+


+-------------------------------------------------------------------------------+
; Setup Times                                                                   ;
+-------------------+------------+-------+-------+------------+-----------------+
; Data Port         ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+-------------------+------------+-------+-------+------------+-----------------+
; input_code[*]     ; clock      ; 1.527 ; 1.527 ; Rise       ; clock           ;
;  input_code[0]    ; clock      ; 0.614 ; 0.614 ; Rise       ; clock           ;
;  input_code[1]    ; clock      ; 1.446 ; 1.446 ; Rise       ; clock           ;
;  input_code[2]    ; clock      ; 1.291 ; 1.291 ; Rise       ; clock           ;
;  input_code[3]    ; clock      ; 1.406 ; 1.406 ; Rise       ; clock           ;
;  input_code[4]    ; clock      ; 1.527 ; 1.527 ; Rise       ; clock           ;
; keypress          ; clock      ; 2.851 ; 2.851 ; Rise       ; clock           ;
; setting_init      ; clock      ; 0.754 ; 0.754 ; Rise       ; clock           ;
; setting_mode[*]   ; clock      ; 1.576 ; 1.576 ; Rise       ; clock           ;
;  setting_mode[0]  ; clock      ; 1.576 ; 1.576 ; Rise       ; clock           ;
;  setting_mode[1]  ; clock      ; 1.290 ; 1.290 ; Rise       ; clock           ;
; setting_rotor[*]  ; clock      ; 0.932 ; 0.932 ; Rise       ; clock           ;
;  setting_rotor[0] ; clock      ; 0.927 ; 0.927 ; Rise       ; clock           ;
;  setting_rotor[1] ; clock      ; 0.932 ; 0.932 ; Rise       ; clock           ;
+-------------------+------------+-------+-------+------------+-----------------+


+---------------------------------------------------------------------------------+
; Hold Times                                                                      ;
+-------------------+------------+--------+--------+------------+-----------------+
; Data Port         ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+-------------------+------------+--------+--------+------------+-----------------+
; input_code[*]     ; clock      ; 0.503  ; 0.503  ; Rise       ; clock           ;
;  input_code[0]    ; clock      ; 0.503  ; 0.503  ; Rise       ; clock           ;
;  input_code[1]    ; clock      ; 0.236  ; 0.236  ; Rise       ; clock           ;
;  input_code[2]    ; clock      ; 0.393  ; 0.393  ; Rise       ; clock           ;
;  input_code[3]    ; clock      ; 0.413  ; 0.413  ; Rise       ; clock           ;
;  input_code[4]    ; clock      ; 0.178  ; 0.178  ; Rise       ; clock           ;
; keypress          ; clock      ; -1.582 ; -1.582 ; Rise       ; clock           ;
; setting_init      ; clock      ; 0.681  ; 0.681  ; Rise       ; clock           ;
; setting_mode[*]   ; clock      ; 0.320  ; 0.320  ; Rise       ; clock           ;
;  setting_mode[0]  ; clock      ; -0.106 ; -0.106 ; Rise       ; clock           ;
;  setting_mode[1]  ; clock      ; 0.320  ; 0.320  ; Rise       ; clock           ;
; setting_rotor[*]  ; clock      ; 0.616  ; 0.616  ; Rise       ; clock           ;
;  setting_rotor[0] ; clock      ; 0.486  ; 0.486  ; Rise       ; clock           ;
;  setting_rotor[1] ; clock      ; 0.616  ; 0.616  ; Rise       ; clock           ;
+-------------------+------------+--------+--------+------------+-----------------+


+----------------------------------------------------------------------------+
; Clock to Output Times                                                      ;
+----------------+------------+-------+-------+------------+-----------------+
; Data Port      ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+----------------+------------+-------+-------+------------+-----------------+
; led_error[*]   ; clock      ; 3.753 ; 3.753 ; Rise       ; clock           ;
;  led_error[0]  ; clock      ; 3.753 ; 3.753 ; Rise       ; clock           ;
;  led_error[1]  ; clock      ; 3.737 ; 3.737 ; Rise       ; clock           ;
;  led_error[2]  ; clock      ; 3.736 ; 3.736 ; Rise       ; clock           ;
;  led_error[3]  ; clock      ; 3.738 ; 3.738 ; Rise       ; clock           ;
;  led_error[4]  ; clock      ; 3.750 ; 3.750 ; Rise       ; clock           ;
; segments_0[*]  ; clock      ; 5.082 ; 5.082 ; Rise       ; clock           ;
;  segments_0[0] ; clock      ; 5.000 ; 5.000 ; Rise       ; clock           ;
;  segments_0[1] ; clock      ; 4.963 ; 4.963 ; Rise       ; clock           ;
;  segments_0[2] ; clock      ; 4.955 ; 4.955 ; Rise       ; clock           ;
;  segments_0[3] ; clock      ; 4.876 ; 4.876 ; Rise       ; clock           ;
;  segments_0[4] ; clock      ; 4.969 ; 4.969 ; Rise       ; clock           ;
;  segments_0[5] ; clock      ; 4.918 ; 4.918 ; Rise       ; clock           ;
;  segments_0[6] ; clock      ; 5.082 ; 5.082 ; Rise       ; clock           ;
; segments_1[*]  ; clock      ; 4.480 ; 4.480 ; Rise       ; clock           ;
;  segments_1[0] ; clock      ; 4.480 ; 4.480 ; Rise       ; clock           ;
;  segments_1[1] ; clock      ; 4.188 ; 4.188 ; Rise       ; clock           ;
;  segments_1[2] ; clock      ; 4.312 ; 4.312 ; Rise       ; clock           ;
;  segments_1[3] ; clock      ; 4.325 ; 4.325 ; Rise       ; clock           ;
;  segments_1[4] ; clock      ; 4.204 ; 4.204 ; Rise       ; clock           ;
;  segments_1[5] ; clock      ; 4.479 ; 4.479 ; Rise       ; clock           ;
;  segments_1[6] ; clock      ; 4.304 ; 4.304 ; Rise       ; clock           ;
; segments_2[*]  ; clock      ; 5.482 ; 5.482 ; Rise       ; clock           ;
;  segments_2[0] ; clock      ; 5.223 ; 5.223 ; Rise       ; clock           ;
;  segments_2[1] ; clock      ; 5.198 ; 5.198 ; Rise       ; clock           ;
;  segments_2[2] ; clock      ; 5.461 ; 5.461 ; Rise       ; clock           ;
;  segments_2[3] ; clock      ; 5.309 ; 5.309 ; Rise       ; clock           ;
;  segments_2[4] ; clock      ; 5.482 ; 5.482 ; Rise       ; clock           ;
;  segments_2[5] ; clock      ; 5.221 ; 5.221 ; Rise       ; clock           ;
;  segments_2[6] ; clock      ; 5.368 ; 5.368 ; Rise       ; clock           ;
; segments_3[*]  ; clock      ; 4.636 ; 4.636 ; Rise       ; clock           ;
;  segments_3[0] ; clock      ; 4.493 ; 4.493 ; Rise       ; clock           ;
;  segments_3[1] ; clock      ; 4.636 ; 4.636 ; Rise       ; clock           ;
;  segments_3[2] ; clock      ; 4.626 ; 4.626 ; Rise       ; clock           ;
;  segments_3[3] ; clock      ; 4.483 ; 4.483 ; Rise       ; clock           ;
;  segments_3[4] ; clock      ; 4.455 ; 4.455 ; Rise       ; clock           ;
;  segments_3[5] ; clock      ; 4.487 ; 4.487 ; Rise       ; clock           ;
;  segments_3[6] ; clock      ; 4.620 ; 4.620 ; Rise       ; clock           ;
+----------------+------------+-------+-------+------------+-----------------+


+----------------------------------------------------------------------------+
; Minimum Clock to Output Times                                              ;
+----------------+------------+-------+-------+------------+-----------------+
; Data Port      ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+----------------+------------+-------+-------+------------+-----------------+
; led_error[*]   ; clock      ; 3.736 ; 3.736 ; Rise       ; clock           ;
;  led_error[0]  ; clock      ; 3.753 ; 3.753 ; Rise       ; clock           ;
;  led_error[1]  ; clock      ; 3.737 ; 3.737 ; Rise       ; clock           ;
;  led_error[2]  ; clock      ; 3.736 ; 3.736 ; Rise       ; clock           ;
;  led_error[3]  ; clock      ; 3.738 ; 3.738 ; Rise       ; clock           ;
;  led_error[4]  ; clock      ; 3.750 ; 3.750 ; Rise       ; clock           ;
; segments_0[*]  ; clock      ; 4.221 ; 4.221 ; Rise       ; clock           ;
;  segments_0[0] ; clock      ; 4.223 ; 4.223 ; Rise       ; clock           ;
;  segments_0[1] ; clock      ; 4.221 ; 4.221 ; Rise       ; clock           ;
;  segments_0[2] ; clock      ; 4.280 ; 4.280 ; Rise       ; clock           ;
;  segments_0[3] ; clock      ; 4.237 ; 4.237 ; Rise       ; clock           ;
;  segments_0[4] ; clock      ; 4.247 ; 4.247 ; Rise       ; clock           ;
;  segments_0[5] ; clock      ; 4.278 ; 4.278 ; Rise       ; clock           ;
;  segments_0[6] ; clock      ; 4.409 ; 4.409 ; Rise       ; clock           ;
; segments_1[*]  ; clock      ; 3.746 ; 3.746 ; Rise       ; clock           ;
;  segments_1[0] ; clock      ; 3.936 ; 3.936 ; Rise       ; clock           ;
;  segments_1[1] ; clock      ; 3.836 ; 3.836 ; Rise       ; clock           ;
;  segments_1[2] ; clock      ; 3.746 ; 3.746 ; Rise       ; clock           ;
;  segments_1[3] ; clock      ; 3.781 ; 3.781 ; Rise       ; clock           ;
;  segments_1[4] ; clock      ; 3.850 ; 3.850 ; Rise       ; clock           ;
;  segments_1[5] ; clock      ; 3.935 ; 3.935 ; Rise       ; clock           ;
;  segments_1[6] ; clock      ; 3.951 ; 3.951 ; Rise       ; clock           ;
; segments_2[*]  ; clock      ; 4.506 ; 4.506 ; Rise       ; clock           ;
;  segments_2[0] ; clock      ; 4.531 ; 4.531 ; Rise       ; clock           ;
;  segments_2[1] ; clock      ; 4.627 ; 4.627 ; Rise       ; clock           ;
;  segments_2[2] ; clock      ; 4.713 ; 4.713 ; Rise       ; clock           ;
;  segments_2[3] ; clock      ; 4.506 ; 4.506 ; Rise       ; clock           ;
;  segments_2[4] ; clock      ; 4.632 ; 4.632 ; Rise       ; clock           ;
;  segments_2[5] ; clock      ; 4.511 ; 4.511 ; Rise       ; clock           ;
;  segments_2[6] ; clock      ; 4.694 ; 4.694 ; Rise       ; clock           ;
; segments_3[*]  ; clock      ; 4.325 ; 4.325 ; Rise       ; clock           ;
;  segments_3[0] ; clock      ; 4.369 ; 4.369 ; Rise       ; clock           ;
;  segments_3[1] ; clock      ; 4.507 ; 4.507 ; Rise       ; clock           ;
;  segments_3[2] ; clock      ; 4.501 ; 4.501 ; Rise       ; clock           ;
;  segments_3[3] ; clock      ; 4.359 ; 4.359 ; Rise       ; clock           ;
;  segments_3[4] ; clock      ; 4.325 ; 4.325 ; Rise       ; clock           ;
;  segments_3[5] ; clock      ; 4.363 ; 4.363 ; Rise       ; clock           ;
;  segments_3[6] ; clock      ; 4.490 ; 4.490 ; Rise       ; clock           ;
+----------------+------------+-------+-------+------------+-----------------+


+--------------------------------------------------------------------------------+
; Multicorner Timing Analysis Summary                                            ;
+------------------+----------+-------+----------+---------+---------------------+
; Clock            ; Setup    ; Hold  ; Recovery ; Removal ; Minimum Pulse Width ;
+------------------+----------+-------+----------+---------+---------------------+
; Worst-case Slack ; -3.201   ; 0.215 ; N/A      ; N/A     ; -1.631              ;
;  clock           ; -3.201   ; 0.215 ; N/A      ; N/A     ; -1.631              ;
; Design-wide TNS  ; -108.804 ; 0.0   ; 0.0      ; 0.0     ; -82.283             ;
;  clock           ; -108.804 ; 0.000 ; N/A      ; N/A     ; -82.283             ;
+------------------+----------+-------+----------+---------+---------------------+


+-------------------------------------------------------------------------------+
; Setup Times                                                                   ;
+-------------------+------------+-------+-------+------------+-----------------+
; Data Port         ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+-------------------+------------+-------+-------+------------+-----------------+
; input_code[*]     ; clock      ; 5.459 ; 5.459 ; Rise       ; clock           ;
;  input_code[0]    ; clock      ; 3.085 ; 3.085 ; Rise       ; clock           ;
;  input_code[1]    ; clock      ; 5.352 ; 5.352 ; Rise       ; clock           ;
;  input_code[2]    ; clock      ; 4.571 ; 4.571 ; Rise       ; clock           ;
;  input_code[3]    ; clock      ; 4.801 ; 4.801 ; Rise       ; clock           ;
;  input_code[4]    ; clock      ; 5.459 ; 5.459 ; Rise       ; clock           ;
; keypress          ; clock      ; 6.527 ; 6.527 ; Rise       ; clock           ;
; setting_init      ; clock      ; 3.399 ; 3.399 ; Rise       ; clock           ;
; setting_mode[*]   ; clock      ; 5.512 ; 5.512 ; Rise       ; clock           ;
;  setting_mode[0]  ; clock      ; 5.512 ; 5.512 ; Rise       ; clock           ;
;  setting_mode[1]  ; clock      ; 4.814 ; 4.814 ; Rise       ; clock           ;
; setting_rotor[*]  ; clock      ; 4.182 ; 4.182 ; Rise       ; clock           ;
;  setting_rotor[0] ; clock      ; 4.182 ; 4.182 ; Rise       ; clock           ;
;  setting_rotor[1] ; clock      ; 4.056 ; 4.056 ; Rise       ; clock           ;
+-------------------+------------+-------+-------+------------+-----------------+


+---------------------------------------------------------------------------------+
; Hold Times                                                                      ;
+-------------------+------------+--------+--------+------------+-----------------+
; Data Port         ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+-------------------+------------+--------+--------+------------+-----------------+
; input_code[*]     ; clock      ; 0.503  ; 0.503  ; Rise       ; clock           ;
;  input_code[0]    ; clock      ; 0.503  ; 0.503  ; Rise       ; clock           ;
;  input_code[1]    ; clock      ; 0.236  ; 0.236  ; Rise       ; clock           ;
;  input_code[2]    ; clock      ; 0.393  ; 0.393  ; Rise       ; clock           ;
;  input_code[3]    ; clock      ; 0.413  ; 0.413  ; Rise       ; clock           ;
;  input_code[4]    ; clock      ; 0.178  ; 0.178  ; Rise       ; clock           ;
; keypress          ; clock      ; -1.582 ; -1.582 ; Rise       ; clock           ;
; setting_init      ; clock      ; 0.681  ; 0.681  ; Rise       ; clock           ;
; setting_mode[*]   ; clock      ; 0.320  ; 0.320  ; Rise       ; clock           ;
;  setting_mode[0]  ; clock      ; -0.106 ; -0.106 ; Rise       ; clock           ;
;  setting_mode[1]  ; clock      ; 0.320  ; 0.320  ; Rise       ; clock           ;
; setting_rotor[*]  ; clock      ; 0.616  ; 0.616  ; Rise       ; clock           ;
;  setting_rotor[0] ; clock      ; 0.486  ; 0.486  ; Rise       ; clock           ;
;  setting_rotor[1] ; clock      ; 0.616  ; 0.616  ; Rise       ; clock           ;
+-------------------+------------+--------+--------+------------+-----------------+


+------------------------------------------------------------------------------+
; Clock to Output Times                                                        ;
+----------------+------------+--------+--------+------------+-----------------+
; Data Port      ; Clock Port ; Rise   ; Fall   ; Clock Edge ; Clock Reference ;
+----------------+------------+--------+--------+------------+-----------------+
; led_error[*]   ; clock      ; 6.929  ; 6.929  ; Rise       ; clock           ;
;  led_error[0]  ; clock      ; 6.929  ; 6.929  ; Rise       ; clock           ;
;  led_error[1]  ; clock      ; 6.901  ; 6.901  ; Rise       ; clock           ;
;  led_error[2]  ; clock      ; 6.900  ; 6.900  ; Rise       ; clock           ;
;  led_error[3]  ; clock      ; 6.898  ; 6.898  ; Rise       ; clock           ;
;  led_error[4]  ; clock      ; 6.910  ; 6.910  ; Rise       ; clock           ;
; segments_0[*]  ; clock      ; 10.638 ; 10.638 ; Rise       ; clock           ;
;  segments_0[0] ; clock      ; 10.516 ; 10.516 ; Rise       ; clock           ;
;  segments_0[1] ; clock      ; 10.316 ; 10.316 ; Rise       ; clock           ;
;  segments_0[2] ; clock      ; 10.308 ; 10.308 ; Rise       ; clock           ;
;  segments_0[3] ; clock      ; 10.079 ; 10.079 ; Rise       ; clock           ;
;  segments_0[4] ; clock      ; 10.146 ; 10.146 ; Rise       ; clock           ;
;  segments_0[5] ; clock      ; 10.077 ; 10.077 ; Rise       ; clock           ;
;  segments_0[6] ; clock      ; 10.638 ; 10.638 ; Rise       ; clock           ;
; segments_1[*]  ; clock      ; 8.923  ; 8.923  ; Rise       ; clock           ;
;  segments_1[0] ; clock      ; 8.923  ; 8.923  ; Rise       ; clock           ;
;  segments_1[1] ; clock      ; 8.163  ; 8.163  ; Rise       ; clock           ;
;  segments_1[2] ; clock      ; 8.539  ; 8.539  ; Rise       ; clock           ;
;  segments_1[3] ; clock      ; 8.558  ; 8.558  ; Rise       ; clock           ;
;  segments_1[4] ; clock      ; 8.180  ; 8.180  ; Rise       ; clock           ;
;  segments_1[5] ; clock      ; 8.920  ; 8.920  ; Rise       ; clock           ;
;  segments_1[6] ; clock      ; 8.425  ; 8.425  ; Rise       ; clock           ;
; segments_2[*]  ; clock      ; 11.596 ; 11.596 ; Rise       ; clock           ;
;  segments_2[0] ; clock      ; 10.984 ; 10.984 ; Rise       ; clock           ;
;  segments_2[1] ; clock      ; 10.914 ; 10.914 ; Rise       ; clock           ;
;  segments_2[2] ; clock      ; 11.596 ; 11.596 ; Rise       ; clock           ;
;  segments_2[3] ; clock      ; 11.217 ; 11.217 ; Rise       ; clock           ;
;  segments_2[4] ; clock      ; 11.592 ; 11.592 ; Rise       ; clock           ;
;  segments_2[5] ; clock      ; 10.938 ; 10.938 ; Rise       ; clock           ;
;  segments_2[6] ; clock      ; 11.290 ; 11.290 ; Rise       ; clock           ;
; segments_3[*]  ; clock      ; 9.248  ; 9.248  ; Rise       ; clock           ;
;  segments_3[0] ; clock      ; 8.932  ; 8.932  ; Rise       ; clock           ;
;  segments_3[1] ; clock      ; 9.109  ; 9.109  ; Rise       ; clock           ;
;  segments_3[2] ; clock      ; 9.107  ; 9.107  ; Rise       ; clock           ;
;  segments_3[3] ; clock      ; 8.920  ; 8.920  ; Rise       ; clock           ;
;  segments_3[4] ; clock      ; 8.879  ; 8.879  ; Rise       ; clock           ;
;  segments_3[5] ; clock      ; 8.920  ; 8.920  ; Rise       ; clock           ;
;  segments_3[6] ; clock      ; 9.248  ; 9.248  ; Rise       ; clock           ;
+----------------+------------+--------+--------+------------+-----------------+


+----------------------------------------------------------------------------+
; Minimum Clock to Output Times                                              ;
+----------------+------------+-------+-------+------------+-----------------+
; Data Port      ; Clock Port ; Rise  ; Fall  ; Clock Edge ; Clock Reference ;
+----------------+------------+-------+-------+------------+-----------------+
; led_error[*]   ; clock      ; 3.736 ; 3.736 ; Rise       ; clock           ;
;  led_error[0]  ; clock      ; 3.753 ; 3.753 ; Rise       ; clock           ;
;  led_error[1]  ; clock      ; 3.737 ; 3.737 ; Rise       ; clock           ;
;  led_error[2]  ; clock      ; 3.736 ; 3.736 ; Rise       ; clock           ;
;  led_error[3]  ; clock      ; 3.738 ; 3.738 ; Rise       ; clock           ;
;  led_error[4]  ; clock      ; 3.750 ; 3.750 ; Rise       ; clock           ;
; segments_0[*]  ; clock      ; 4.221 ; 4.221 ; Rise       ; clock           ;
;  segments_0[0] ; clock      ; 4.223 ; 4.223 ; Rise       ; clock           ;
;  segments_0[1] ; clock      ; 4.221 ; 4.221 ; Rise       ; clock           ;
;  segments_0[2] ; clock      ; 4.280 ; 4.280 ; Rise       ; clock           ;
;  segments_0[3] ; clock      ; 4.237 ; 4.237 ; Rise       ; clock           ;
;  segments_0[4] ; clock      ; 4.247 ; 4.247 ; Rise       ; clock           ;
;  segments_0[5] ; clock      ; 4.278 ; 4.278 ; Rise       ; clock           ;
;  segments_0[6] ; clock      ; 4.409 ; 4.409 ; Rise       ; clock           ;
; segments_1[*]  ; clock      ; 3.746 ; 3.746 ; Rise       ; clock           ;
;  segments_1[0] ; clock      ; 3.936 ; 3.936 ; Rise       ; clock           ;
;  segments_1[1] ; clock      ; 3.836 ; 3.836 ; Rise       ; clock           ;
;  segments_1[2] ; clock      ; 3.746 ; 3.746 ; Rise       ; clock           ;
;  segments_1[3] ; clock      ; 3.781 ; 3.781 ; Rise       ; clock           ;
;  segments_1[4] ; clock      ; 3.850 ; 3.850 ; Rise       ; clock           ;
;  segments_1[5] ; clock      ; 3.935 ; 3.935 ; Rise       ; clock           ;
;  segments_1[6] ; clock      ; 3.951 ; 3.951 ; Rise       ; clock           ;
; segments_2[*]  ; clock      ; 4.506 ; 4.506 ; Rise       ; clock           ;
;  segments_2[0] ; clock      ; 4.531 ; 4.531 ; Rise       ; clock           ;
;  segments_2[1] ; clock      ; 4.627 ; 4.627 ; Rise       ; clock           ;
;  segments_2[2] ; clock      ; 4.713 ; 4.713 ; Rise       ; clock           ;
;  segments_2[3] ; clock      ; 4.506 ; 4.506 ; Rise       ; clock           ;
;  segments_2[4] ; clock      ; 4.632 ; 4.632 ; Rise       ; clock           ;
;  segments_2[5] ; clock      ; 4.511 ; 4.511 ; Rise       ; clock           ;
;  segments_2[6] ; clock      ; 4.694 ; 4.694 ; Rise       ; clock           ;
; segments_3[*]  ; clock      ; 4.325 ; 4.325 ; Rise       ; clock           ;
;  segments_3[0] ; clock      ; 4.369 ; 4.369 ; Rise       ; clock           ;
;  segments_3[1] ; clock      ; 4.507 ; 4.507 ; Rise       ; clock           ;
;  segments_3[2] ; clock      ; 4.501 ; 4.501 ; Rise       ; clock           ;
;  segments_3[3] ; clock      ; 4.359 ; 4.359 ; Rise       ; clock           ;
;  segments_3[4] ; clock      ; 4.325 ; 4.325 ; Rise       ; clock           ;
;  segments_3[5] ; clock      ; 4.363 ; 4.363 ; Rise       ; clock           ;
;  segments_3[6] ; clock      ; 4.490 ; 4.490 ; Rise       ; clock           ;
+----------------+------------+-------+-------+------------+-----------------+


+-------------------------------------------------------------------+
; Setup Transfers                                                   ;
+------------+----------+----------+----------+----------+----------+
; From Clock ; To Clock ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+------------+----------+----------+----------+----------+----------+
; clock      ; clock    ; 276      ; 0        ; 0        ; 0        ;
+------------+----------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


+-------------------------------------------------------------------+
; Hold Transfers                                                    ;
+------------+----------+----------+----------+----------+----------+
; From Clock ; To Clock ; RR Paths ; FR Paths ; RF Paths ; FF Paths ;
+------------+----------+----------+----------+----------+----------+
; clock      ; clock    ; 276      ; 0        ; 0        ; 0        ;
+------------+----------+----------+----------+----------+----------+
Entries labeled "false path" only account for clock-to-clock false paths and not path-based false paths. As a result, actual path counts may be lower than reported.


---------------
; Report TCCS ;
---------------
No dedicated SERDES Transmitter circuitry present in device or used in design


---------------
; Report RSKM ;
---------------
No dedicated SERDES Receiver circuitry present in device or used in design


+------------------------------------------------+
; Unconstrained Paths                            ;
+---------------------------------+-------+------+
; Property                        ; Setup ; Hold ;
+---------------------------------+-------+------+
; Illegal Clocks                  ; 0     ; 0    ;
; Unconstrained Clocks            ; 0     ; 0    ;
; Unconstrained Input Ports       ; 12    ; 12   ;
; Unconstrained Input Port Paths  ; 500   ; 500  ;
; Unconstrained Output Ports      ; 33    ; 33   ;
; Unconstrained Output Port Paths ; 151   ; 151  ;
+---------------------------------+-------+------+


+------------------------------------+
; TimeQuest Timing Analyzer Messages ;
+------------------------------------+
Info: *******************************************************************
Info: Running Quartus II 64-Bit TimeQuest Timing Analyzer
    Info: Version 13.0.1 Build 232 06/12/2013 Service Pack 1 SJ Web Edition
    Info: Processing started: Fri Apr 08 19:24:12 2016
Info: Command: quartus_sta g47_ui -c g47_ui
Info: qsta_default_script.tcl version: #1
Info (20030): Parallel compilation is enabled and will use 2 of the 2 processors detected
Info (21077): Low junction temperature is 0 degrees C
Info (21077): High junction temperature is 85 degrees C
Critical Warning (332012): Synopsys Design Constraints File file not found: 'g47_ui.sdc'. A Synopsys Design Constraints File is required by the TimeQuest Timing Analyzer to get proper timing constraints. Without it, the Compiler will not properly optimize the design.
Info (332142): No user constrained base clocks found in the design. Calling "derive_clocks -period 1.0"
Info (332105): Deriving Clocks
    Info (332105): create_clock -period 1.000 -name clock clock
Info: Found TIMEQUEST_REPORT_SCRIPT_INCLUDE_DEFAULT_ANALYSIS = ON
Info: Analyzing Slow Model
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -3.201
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -3.201      -108.804 clock 
Info (332146): Worst-case hold slack is 0.445
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):     0.445         0.000 clock 
Info (332140): No Recovery paths to report
Info (332140): No Removal paths to report
Info (332146): Worst-case minimum pulse width slack is -1.631
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.631       -82.283 clock 
Info (332001): The selected device family is not supported by the report_metastability command.
Info: Analyzing Fast Model
Critical Warning (332148): Timing requirements not met
Info (332146): Worst-case setup slack is -0.552
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -0.552       -13.490 clock 
Info (332146): Worst-case hold slack is 0.215
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):     0.215         0.000 clock 
Info (332140): No Recovery paths to report
Info (332140): No Removal paths to report
Info (332146): Worst-case minimum pulse width slack is -1.380
    Info (332119):     Slack End Point TNS Clock 
    Info (332119): ========= ============= =====================
    Info (332119):    -1.380       -67.380 clock 
Info (332001): The selected device family is not supported by the report_metastability command.
Info (332102): Design is not fully constrained for setup requirements
Info (332102): Design is not fully constrained for hold requirements
Info: Quartus II 64-Bit TimeQuest Timing Analyzer was successful. 0 errors, 3 warnings
    Info: Peak virtual memory: 467 megabytes
    Info: Processing ended: Fri Apr 08 19:24:14 2016
    Info: Elapsed time: 00:00:02
    Info: Total CPU time (on all processors): 00:00:01


